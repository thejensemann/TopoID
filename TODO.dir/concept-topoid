** topology identification
- read diagrams
- compute diagram topologies
(- merge with given topologies)
- minimize set of generic topologies
- complete generic topologies
(- try to minimize again)
- map to linearly independent top.s
- minimize set of basic topologies
(- try to complete basic topologies; shouldn't occur!)
** generate form code
- diagram mapping or EXP config file
- generic topology definitions
- basic topology definitions
** integral identification
- read topologies
- canonicalise topologies
- read occuring indices
- generate integrals
- canonicalise integrals
  (- check for scalefulness, apply symmetries (should have happend
  during reduction!))
- compare / map to minimal set
  -> generates identification table
  (- convert to FORM syntax)
** base change
- read topologies 1
- read topologies 2
- read occuring indices 2
- generate integrals 2
- canonicalise integrals 2
  (- compare / map to minimal set)
- try to map integrals 2 to topologies 1
  -> generates identification table
  (- convert to FORM syntax)
* todo
- again check factorization in module for scalar products
- possible to select optimal/shorter relations?
- ndGTXXX necessary? compute in procedure?

- Used options for generation and remark "generated by TopoID on
  <date-string>" as comments in output!?

- Automatic local/global declare-file generation?!

** Discard unnecessary symmetries/zero-subsets(?):
- due to beeing nested?
- beeing constrained by scalar products!?

** dis-include empty FORM-procedures?
- but to be done at two places (-)

** reverse order of symmetries, zero-subsets <-> performance? => make option

- implement Switch-option for GenBasFRM?!

- declare function for topologies

** report: nr. of dia.s, gen. top.s, bas. top.s
- to .log file
- to .gen and .def files

------------------------------------------------------------------------

* identification of master integrals
- needs list of appearing basic topology functions (indices) and basic
  topology definitions
- apply all index configurations to alpha-representations of each
  topology -> obtain list
- compare all list elements with each other and map onto each other
** IN
*** .txt-result files -[func-args.pl]-> .mis Mathematica readable file with a list:
    MIS[<bas._top.>] = {<bas._top.>[<ind.s>], ...};
*** .bas file(s) with topology definitions
** OUT
*** identification table
    BTXXX[YYY] -> MIZZZ, MI[ZZZ]
    id BTXXX(YYY) = MIZZZ, MI(ZZZ)
*** images
    .ps
    .tex -> feynMF
* mis [NEW]
  find and identify master integrals ([M.I.'S])
** IN
** OUT
- identification table
  e.g. GT95s1[1,0,0,0,-1,1] -> MI
  e.g. BTXXX[YYY] -> MIYYY
* read setup from .dia file
* .sty files for mathematica output
* .pl files for scannig of M.I.s
* need to generate all basic top.s if GenBasFRM[Method -> Enclosed], i.e.:
  GenBasFRM[..., Method -> Enclosed] =!=> BasTopDef[lintops]]
  GenBasFRM[..., Method -> Minimal] =!=> BasTopDef[bastops]
* fold name in GetTops, GetDias?
* math-usage: bug with last appearing message and message counter
* func-args: name for the mma list in the output
* report nr. of generated gen.top.s, bastop.s, ...
* reduction tables; at the end: "id GTXXXsYYY(?a) = [NOT_REDUCED] * GTXXXsYYY(a);" marks unreduced scalar integrals.
