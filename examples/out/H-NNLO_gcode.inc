*--#[ NNLOrGT1 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:07:47.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d6 (hb), p1 - v1 + v2, 5 -- 4
*   2: d7 (gl), v1 - v2,      6 -- 4
*   3: d5 (gl), -p2 + v2,     6 -- 3
*   4: d4 (gl), -v2,          5 -- 3
*   5: d2 (gl), -p1 + v1,     5 -- 1
*   6: d1 (gl), -v1,          2 -- 1
*   7: d3 (gl), p2 - v1,      6 -- 2
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT3.def

#procedure zNNLOrGT1
* vanishing sub-topologies
if ((count(d6,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT1(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT1tNNLOrBT3(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT3;
mu replace_(d6,d6, d7,d7, d5,d5, d4,d4, d2,d2, d1,d1, d3,d3);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT3((`MM'))
.sort
#call gNNLOrBT3((`MM'),(`M2ep'))
.sort
#call zNNLOrBT3
.sort
#endprocedure

#procedure NNLOrGT1
#message this is "NNLOrGT1"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT1
#call pNNLOrGT1(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT1tNNLOrBT3(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT1\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT3'
#message symmetrize "NNLOrBT3"...
#call yNNLOrBT3
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT3'
#message read table for "NNLOrBT3"...
#include `ROOT'/tab/NNLOrBT3.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT1 :



*--#[ NNLOrGT10 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:07:49.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gh), p1 + p2 - v1 - v2, 5 -- 6
*   2: d4 (hb), -v2,               4 -- 3
*   3: d6 (gl), p1 - v2,           6 -- 4
*   4: d5 (gl), -p2 + v2,          5 -- 3
*   5: d3 (gh), p2 - v1,           6 -- 2
*   6: d2 (gh), p1 - v1,           1 -- 5
*   7: d1 (gh), -v1,               2 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT1.def

#procedure zNNLOrGT10
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d4,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT10(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT10tNNLOrBT1(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT1;
mu replace_(d7,d7, d4,d4, d6,d6, d5,d5, d3,d3, d2,d2, d1,d1);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT1((`MM'))
.sort
#call gNNLOrBT1((`MM'),(`M2ep'))
.sort
#call zNNLOrBT1
.sort
#endprocedure

#procedure NNLOrGT10
#message this is "NNLOrGT10"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT10
#call pNNLOrGT10(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT10tNNLOrBT1(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT10\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT1'
#message symmetrize "NNLOrBT1"...
#call yNNLOrBT1
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT1'
#message read table for "NNLOrBT1"...
#include `ROOT'/tab/NNLOrBT1.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT10 :



*--#[ NNLOrGT11 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:07:52.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (hb), -p1 - p2 + v1 + v2, 6 -- 5
*   2: d1 (gl), -v1,                2 -- 1
*   3: d2 (gl), -p1 + v1,           5 -- 1
*   4: d3 (gl), p2 - v1,            6 -- 2
*   5: d4 (gl), -v2,                4 -- 3
*   6: d6 (gl), p1 - v2,            6 -- 4
*   7: d5 (gl), -p2 + v2,           5 -- 3
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT2.def

#procedure zNNLOrGT11
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0)) 
  discard;
if ((count(d4,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT11(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT11tNNLOrBT2(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT2;
mu replace_(d7,d7, d1,d1, d2,d2, d3,d3, d4,d4, d6,d6, d5,d5);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT2((`MM'))
.sort
#call gNNLOrBT2((`MM'),(`M2ep'))
.sort
#call zNNLOrBT2
.sort
#endprocedure

#procedure NNLOrGT11
#message this is "NNLOrGT11"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT11
#call pNNLOrGT11(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT11tNNLOrBT2(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT11\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT2'
#message symmetrize "NNLOrBT2"...
#call yNNLOrBT2
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT2'
#message read table for "NNLOrBT2"...
#include `ROOT'/tab/NNLOrBT2.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT11 :



*--#[ NNLOrGT12 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:07:55.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (hb), -p2 - v1 - v2, 6 -- 5
*   2: d5 (gl), -v2,           5 -- 4
*   3: d6 (gl), p1 + v2,       6 -- 4
*   4: d3 (gl), -p2 - v1,      5 -- 2
*   5: d4 (gl), -p1 + p2 + v1, 6 -- 3
*   6: d2 (gl), -p1 + v1,      3 -- 1
*   7: d1 (gl), -v1,           2 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT2.def
#include `ROOT'/def/NNLOrBT5.def
#include `ROOT'/def/NNLOrBT6.def

#procedure zNNLOrGT12
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT12(MM)
* partial fraction decomposition:
*   d1 - d2 - d3 + d4 - s
id d1 = d2 + d3 - d4 + (`MM');
id d2/d1 = (d1 - d3 + d4 - (`MM'))/d1;
id d4/(d1*d2) = -((d1 - d2 - d3 - (`MM'))/(d1*d2));
id d3/(d1*d2*d4) = (d1 - d2 + d4 - (`MM'))/(d1*d2*d4);
id 1/(d1*d2*d3*d4) = (d1 - d2 - d3 + d4)/(d1*d2*d3*d4*(`MM'));
* kinematic constraints
id p1.p1 = 0;
id p2.p2 = 0;
id p1.p2 = -(`MM')/2;
#endprocedure

#procedure mNNLOrGT12tNNLOrBT2(marker,MM,M2ep)
* subset 1
* map from (1,2,3,5,6,7) to (1,2,3,7,5,6)
if ((count(d3,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT2;
mu replace_(d7,d7, d5,d1, d6,d2, d4,d5, d2,d4, d1,d6);
mu replace_(v1,p1 - v2, v2,-v1);
endif;
.sort
#call cNNLOrBT2((`MM'))
.sort
#call gNNLOrBT2((`MM'),(`M2ep'))
.sort
#call zNNLOrBT2
.sort
#endprocedure

#procedure mNNLOrGT12tNNLOrBT5(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,6,7) to (1,3,4,5,6,7)
if ((count(d4,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT5;
mu replace_(d7,d7, d5,d5, d6,d4, d3,d3, d2,d2, d1,d1);
mu replace_(v1,-v1, v2,-p1 + v2);
endif;
.sort
#call cNNLOrBT5((`MM'))
.sort
#call gNNLOrBT5((`MM'),(`M2ep'))
.sort
#call zNNLOrBT5
.sort
#endprocedure

#procedure mNNLOrGT12tNNLOrBT6(marker,MM,M2ep)
* subset 1
* map from (1,3,2,4,5,6) to (1,3,4,5,6,7)
if ((count(d1,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT6;
mu replace_(d7,d6, d6,d5, d5,d4, d3,d2, d4,d1, d2,d3);
mu replace_(v1,p1 - p2 + v1, v2,-v2);
endif;
.sort
#call cNNLOrBT6((`MM'))
.sort
#call gNNLOrBT6((`MM'),(`M2ep'))
.sort
#call zNNLOrBT6
.sort
#endprocedure

#procedure NNLOrGT12
#message this is "NNLOrGT12"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT12
#call pNNLOrGT12(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT12tNNLOrBT2(marker,s,[(mu^2/s)^ep])
.sort
#call mNNLOrGT12tNNLOrBT5(marker,s,[(mu^2/s)^ep])
.sort
#call mNNLOrGT12tNNLOrBT6(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT12\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT2'
#message symmetrize "NNLOrBT2"...
#call yNNLOrBT2
.sort
#endif
#ifdef `symNNLOrBT5'
#message symmetrize "NNLOrBT5"...
#call yNNLOrBT5
.sort
#endif
#ifdef `symNNLOrBT6'
#message symmetrize "NNLOrBT6"...
#call yNNLOrBT6
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT2'
#message read table for "NNLOrBT2"...
#include `ROOT'/tab/NNLOrBT2.inx
.sort
#endif
#ifdef `useNNLOrBT5'
#message read table for "NNLOrBT5"...
#include `ROOT'/tab/NNLOrBT5.inx
.sort
#endif
#ifdef `useNNLOrBT6'
#message read table for "NNLOrBT6"...
#include `ROOT'/tab/NNLOrBT6.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT12 :



*--#[ NNLOrGT13 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:02.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gl), -p2 - v1 - v2, 6 -- 5
*   2: d5 (hb), -v2,           5 -- 4
*   3: d6 (gl), p1 + v2,       6 -- 4
*   4: d3 (gl), -p2 - v1,      5 -- 2
*   5: d1 (gl), -v1,           2 -- 1
*   6: d4 (gl), -p1 + p2 + v1, 6 -- 3
*   7: d2 (gl), -p1 + v1,      3 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT1.def
#include `ROOT'/def/NNLOrBT5.def
#include `ROOT'/def/NNLOrBT6.def

#procedure zNNLOrGT13
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT13(MM)
* partial fraction decomposition:
*   -d1 + d2 + d3 - d4 + s
id d2 = d1 - d3 + d4 - (`MM');
id d4/d2 = -((d1 - d2 - d3 - (`MM'))/d2);
id d1/(d2*d4) = (d2 + d3 - d4 + (`MM'))/(d2*d4);
id d3/(d1*d2*d4) = (d1 - d2 + d4 - (`MM'))/(d1*d2*d4);
id 1/(d1*d2*d3*d4) = (d1 - d2 - d3 + d4)/(d1*d2*d3*d4*(`MM'));
* kinematic constraints
id p1.p1 = 0;
id p2.p2 = 0;
id p1.p2 = -(`MM')/2;
#endprocedure

#procedure mNNLOrGT13tNNLOrBT1(marker,MM,M2ep)
* subset 1
* map from (1,2,3,5,6,7) to (1,2,3,6,5,7)
if ((count(d3,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT1;
mu replace_(d7,d7, d5,d4, d6,d6, d1,d2, d4,d3, d2,d1);
mu replace_(v1,p1 - v1, v2,-v2);
endif;
.sort
#call cNNLOrBT1((`MM'))
.sort
#call gNNLOrBT1((`MM'),(`M2ep'))
.sort
#call zNNLOrBT1
.sort
#endprocedure

#procedure mNNLOrGT13tNNLOrBT5(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,6,7) to (3,1,2,5,7,6)
if ((count(d1,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT5;
mu replace_(d7,d5, d5,d7, d6,d6, d3,d3, d4,d1, d2,d2);
mu replace_(p1,p2, p2,p1);
mu replace_(v1,-p1 + p2 - v1, v2,p1 - p2 + v1 - v2);
endif;
.sort
#call cNNLOrBT5((`MM'))
.sort
#call gNNLOrBT5((`MM'),(`M2ep'))
.sort
#call zNNLOrBT5
.sort
#endprocedure

#procedure mNNLOrGT13tNNLOrBT6(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,7) to (4,1,2,5,6,7)
if ((count(d4,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT6;
mu replace_(d7,d4, d5,d6, d6,d7, d3,d2, d1,d1, d2,d3);
mu replace_(p1,p2, p2,p1);
mu replace_(v1,v1, v2,-p1 - v1 + v2);
endif;
.sort
#call cNNLOrBT6((`MM'))
.sort
#call gNNLOrBT6((`MM'),(`M2ep'))
.sort
#call zNNLOrBT6
.sort
#endprocedure

#procedure NNLOrGT13
#message this is "NNLOrGT13"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT13
#call pNNLOrGT13(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT13tNNLOrBT1(marker,s,[(mu^2/s)^ep])
.sort
#call mNNLOrGT13tNNLOrBT5(marker,s,[(mu^2/s)^ep])
.sort
#call mNNLOrGT13tNNLOrBT6(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT13\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT1'
#message symmetrize "NNLOrBT1"...
#call yNNLOrBT1
.sort
#endif
#ifdef `symNNLOrBT5'
#message symmetrize "NNLOrBT5"...
#call yNNLOrBT5
.sort
#endif
#ifdef `symNNLOrBT6'
#message symmetrize "NNLOrBT6"...
#call yNNLOrBT6
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT1'
#message read table for "NNLOrBT1"...
#include `ROOT'/tab/NNLOrBT1.inx
.sort
#endif
#ifdef `useNNLOrBT5'
#message read table for "NNLOrBT5"...
#include `ROOT'/tab/NNLOrBT5.inx
.sort
#endif
#ifdef `useNNLOrBT6'
#message read table for "NNLOrBT6"...
#include `ROOT'/tab/NNLOrBT6.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT13 :



*--#[ NNLOrGT14 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:09.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gl), -p2 - v1 - v2, 6 -- 5
*   2: d5 (gl), -v2,           5 -- 4
*   3: d6 (gl), p1 + v2,       6 -- 4
*   4: d3 (hb), -p2 - v1,      5 -- 2
*   5: d1 (gl), -v1,           2 -- 1
*   6: d4 (gl), -p1 + p2 + v1, 6 -- 3
*   7: d2 (gl), -p1 + v1,      3 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT7.def

#procedure zNNLOrGT14
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT14(MM)
* partial fraction decomposition:
*   -d1 + d2 + d3 - d4 + s - s*x
id d2 = d1 - d3 + d4 - (`MM')*[1-x];
id d4/d2 = -((d1 - d2 - d3 - (`MM')*[1-x])/d2);
id d1/(d2*d4) = (d2 + d3 - d4 + (`MM')*[1-x])/(d2*d4);
id d3/(d1*d2*d4) = (d1 - d2 + d4 - (`MM')*[1-x])/(d1*d2*d4);
id 1/(d1*d2*d3*d4) = (d1 - d2 - d3 + d4)/(d1*d2*d3*d4*(`MM')*[1-x]);
* kinematic constraints
id p1.p1 = 0;
id p2.p2 = 0;
id p1.p2 = -(`MM')/2;
#endprocedure

#procedure mNNLOrGT14tNNLOrBT7(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,7) to (1,3,4,5,6,7)
if ((count(d4,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT7;
mu replace_(d7,d7, d5,d5, d6,d4, d3,d3, d1,d1, d2,d2);
mu replace_(v1,-v1, v2,-p1 + v2);
endif;
* subset 2
* map from (1,2,3,4,6,7) to (3,1,2,5,6,7)
if ((count(d1,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT7;
mu replace_(d7,d5, d5,d7, d6,d6, d3,d3, d4,d1, d2,d2);
mu replace_(p1,p2, p2,p1);
mu replace_(v1,-p1 + p2 - v1, v2,p1 - p2 + v1 - v2);
endif;
.sort
#call cNNLOrBT7((`MM'))
.sort
#call gNNLOrBT7((`MM'),(`M2ep'))
.sort
#call zNNLOrBT7
.sort
#endprocedure

#procedure NNLOrGT14
#message this is "NNLOrGT14"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT14
#call pNNLOrGT14(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT14tNNLOrBT7(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT14\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT7'
#message symmetrize "NNLOrBT7"...
#call yNNLOrBT7
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT7'
#message read table for "NNLOrBT7"...
#include `ROOT'/tab/NNLOrBT7.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT14 :



*--#[ NNLOrGT15 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:14.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gh), -p2 - v1 - v2, 6 -- 5
*   2: d6 (gh), -p1 - v2,      4 -- 6
*   3: d5 (gh), -v2,           5 -- 4
*   4: d2 (hb), -p1 + v1,      3 -- 1
*   5: d1 (gl), -v1,           2 -- 1
*   6: d4 (gl), -p1 + p2 + v1, 6 -- 3
*   7: d3 (gl), -p2 - v1,      5 -- 2
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT1.def
#include `ROOT'/def/NNLOrBT7.def

#procedure zNNLOrGT15
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT15(MM)
* partial fraction decomposition:
*   -d1 + d2 + d3 - d4 + s - s*x
id d3 = d1 - d2 + d4 - (`MM')*[1-x];
id d4/d3 = -((d1 - d2 - d3 - (`MM')*[1-x])/d3);
id d1/(d3*d4) = (d2 + d3 - d4 + (`MM')*[1-x])/(d3*d4);
id d2/(d1*d3*d4) = (d1 - d3 + d4 - (`MM')*[1-x])/(d1*d3*d4);
id 1/(d1*d2*d3*d4) = (d1 - d2 - d3 + d4)/(d1*d2*d3*d4*(`MM')*[1-x]);
* kinematic constraints
id p1.p1 = 0;
id p2.p2 = 0;
id p1.p2 = -(`MM')/2;
#endprocedure

#procedure mNNLOrGT15tNNLOrBT1(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6) to (1,5,7,2,4,3)
if ((count(d3,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT1;
mu replace_(d7,d7, d6,d3, d5,d1, d2,d4, d1,d5, d4,d6);
mu replace_(p1,p2, p2,p1);
mu replace_(v1,p2 - v2, v2,-v1);
endif;
.sort
#call cNNLOrBT1((`MM'))
.sort
#call gNNLOrBT1((`MM'),(`M2ep'))
.sort
#call zNNLOrBT1
.sort
#endprocedure

#procedure mNNLOrGT15tNNLOrBT7(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,6,7) to (2,3,4,5,6,7)
if ((count(d1,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT7;
mu replace_(d7,d6, d6,d5, d5,d4, d2,d3, d4,d1, d3,d2);
mu replace_(v1,p1 - p2 + v1, v2,-v2);
endif;
* subset 2
* map from (1,2,3,4,5,7) to (4,1,2,5,6,7)
if ((count(d4,1) == 0) && match(`marker'));
id (`marker') = NNLOrBT7;
mu replace_(d7,d4, d6,d7, d5,d6, d2,d3, d1,d1, d3,d2);
mu replace_(p1,p2, p2,p1);
mu replace_(v1,v1, v2,-p1 - v1 + v2);
endif;
.sort
#call cNNLOrBT7((`MM'))
.sort
#call gNNLOrBT7((`MM'),(`M2ep'))
.sort
#call zNNLOrBT7
.sort
#endprocedure

#procedure NNLOrGT15
#message this is "NNLOrGT15"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT15
#call pNNLOrGT15(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT15tNNLOrBT1(marker,s,[(mu^2/s)^ep])
.sort
#call mNNLOrGT15tNNLOrBT7(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT15\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT1'
#message symmetrize "NNLOrBT1"...
#call yNNLOrBT1
.sort
#endif
#ifdef `symNNLOrBT7'
#message symmetrize "NNLOrBT7"...
#call yNNLOrBT7
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT1'
#message read table for "NNLOrBT1"...
#include `ROOT'/tab/NNLOrBT1.inx
.sort
#endif
#ifdef `useNNLOrBT7'
#message read table for "NNLOrBT7"...
#include `ROOT'/tab/NNLOrBT7.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT15 :



*--#[ NNLOrGT2 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:21.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d4 (gh), -v2,           5 -- 3
*   2: d5 (gh), p2 - v2,       3 -- 6
*   3: d7 (gh), v1 - v2,       6 -- 4
*   4: d6 (gh), -p1 + v1 - v2, 4 -- 5
*   5: d1 (hb), -v1,           2 -- 1
*   6: d2 (gl), -p1 + v1,      5 -- 1
*   7: d3 (gl), p2 - v1,       6 -- 2
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT4.def

#procedure zNNLOrGT2
* vanishing sub-topologies
if ((count(d5,1) >= 0)) 
  discard;
if ((count(d6,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT2(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT2tNNLOrBT4(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT4;
mu replace_(d4,d4, d5,d5, d7,d7, d6,d6, d1,d1, d2,d2, d3,d3);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT4((`MM'))
.sort
#call gNNLOrBT4((`MM'),(`M2ep'))
.sort
#call zNNLOrBT4
.sort
#endprocedure

#procedure NNLOrGT2
#message this is "NNLOrGT2"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT2
#call pNNLOrGT2(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT2tNNLOrBT4(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT2\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT4'
#message symmetrize "NNLOrBT4"...
#call yNNLOrBT4
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT4'
#message read table for "NNLOrBT4"...
#include `ROOT'/tab/NNLOrBT4.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT2 :



*--#[ NNLOrGT3 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:24.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (hb), p1 - p2 + v1 - v2, 6 -- 4
*   2: d6 (gl), -p1 - v1 + v2,     5 -- 4
*   3: d5 (gl), -p1 + v2,          6 -- 3
*   4: d4 (gl), -v2,               5 -- 3
*   5: d3 (gl), p2 - v1,           6 -- 2
*   6: d2 (gl), p1 + v1,           5 -- 1
*   7: d1 (gl), -v1,               2 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT5.def

#procedure zNNLOrGT3
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT3(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT3tNNLOrBT5(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT5;
mu replace_(d7,d7, d6,d6, d5,d5, d4,d4, d3,d3, d2,d2, d1,d1);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT5((`MM'))
.sort
#call gNNLOrBT5((`MM'),(`M2ep'))
.sort
#call zNNLOrBT5
.sort
#endprocedure

#procedure NNLOrGT3
#message this is "NNLOrGT3"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT3
#call pNNLOrGT3(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT3tNNLOrBT5(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT3\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT5'
#message symmetrize "NNLOrBT5"...
#call yNNLOrBT5
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT5'
#message read table for "NNLOrBT5"...
#include `ROOT'/tab/NNLOrBT5.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT3 :



*--#[ NNLOrGT4 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:27.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d6 (hb), -p1 - v1 + v2,     5 -- 4
*   2: d7 (gl), p1 - p2 + v1 - v2, 6 -- 4
*   3: d5 (gl), -p1 + v2,          6 -- 3
*   4: d4 (gl), -v2,               5 -- 3
*   5: d2 (gl), p1 + v1,           5 -- 1
*   6: d1 (gl), -v1,               2 -- 1
*   7: d3 (gl), p2 - v1,           6 -- 2
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT6.def

#procedure zNNLOrGT4
* vanishing sub-topologies
if ((count(d6,1) >= 0)) 
  discard;
if ((count(d4,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT4(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT4tNNLOrBT6(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT6;
mu replace_(d6,d6, d7,d7, d5,d5, d4,d4, d2,d2, d1,d1, d3,d3);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT6((`MM'))
.sort
#call gNNLOrBT6((`MM'),(`M2ep'))
.sort
#call zNNLOrBT6
.sort
#endprocedure

#procedure NNLOrGT4
#message this is "NNLOrGT4"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT4
#call pNNLOrGT4(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT4tNNLOrBT6(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT4\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT6'
#message symmetrize "NNLOrBT6"...
#call yNNLOrBT6
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT6'
#message read table for "NNLOrBT6"...
#include `ROOT'/tab/NNLOrBT6.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT4 :



*--#[ NNLOrGT5 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:30.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gl), p1 - p2 + v1 - v2, 6 -- 4
*   2: d6 (gl), -p1 - v1 + v2,     5 -- 4
*   3: d5 (gl), -p1 + v2,          6 -- 3
*   4: d4 (gl), -v2,               5 -- 3
*   5: d3 (hb), p2 - v1,           6 -- 2
*   6: d1 (gl), -v1,               2 -- 1
*   7: d2 (gl), p1 + v1,           5 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT7.def

#procedure zNNLOrGT5
* vanishing sub-topologies
if ((count(d3,1) >= 0)) 
  discard;
if ((count(d6,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
if ((count(d4,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d4,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT5(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT5tNNLOrBT7(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT7;
mu replace_(d7,d7, d6,d6, d5,d5, d4,d4, d3,d3, d1,d1, d2,d2);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT7((`MM'))
.sort
#call gNNLOrBT7((`MM'),(`M2ep'))
.sort
#call zNNLOrBT7
.sort
#endprocedure

#procedure NNLOrGT5
#message this is "NNLOrGT5"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT5
#call pNNLOrGT5(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT5tNNLOrBT7(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT5\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT7'
#message symmetrize "NNLOrBT7"...
#call yNNLOrBT7
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT7'
#message read table for "NNLOrBT7"...
#include `ROOT'/tab/NNLOrBT7.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT5 :



*--#[ NNLOrGT6 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:32.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (hb), v1 + v2,  6 -- 5
*   2: d1 (gl), -v1,      2 -- 1
*   3: d2 (gl), -p1 + v1, 5 -- 1
*   4: d3 (gl), -p2 - v1, 6 -- 2
*   5: d4 (gl), -v2,      4 -- 3
*   6: d6 (gl), p2 - v2,  6 -- 4
*   7: d5 (gl), p1 + v2,  5 -- 3
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT8.def

#procedure zNNLOrGT6
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d3,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT6(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT6tNNLOrBT8(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT8;
mu replace_(d7,d7, d1,d1, d2,d2, d3,d3, d4,d4, d6,d6, d5,d5);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT8((`MM'))
.sort
#call gNNLOrBT8((`MM'),(`M2ep'))
.sort
#call zNNLOrBT8
.sort
#endprocedure

#procedure NNLOrGT6
#message this is "NNLOrGT6"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT6
#call pNNLOrGT6(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT6tNNLOrBT8(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT6\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT8'
#message symmetrize "NNLOrBT8"...
#call yNNLOrBT8
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT8'
#message read table for "NNLOrBT8"...
#include `ROOT'/tab/NNLOrBT8.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT6 :



*--#[ NNLOrGT7 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:35.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gl), v1 + v2,  6 -- 5
*   2: d6 (hb), p2 - v2,  6 -- 4
*   3: d4 (gl), -v2,      4 -- 3
*   4: d5 (gl), p1 + v2,  5 -- 3
*   5: d3 (gl), -p2 - v1, 6 -- 2
*   6: d1 (gl), -v1,      2 -- 1
*   7: d2 (gl), -p1 + v1, 5 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT9.def

#procedure zNNLOrGT7
* vanishing sub-topologies
if ((count(d6,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0) &&
    (count(d2,1) >= 0) &&
    (count(d3,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT7(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT7tNNLOrBT9(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT9;
mu replace_(d7,d7, d6,d6, d4,d4, d5,d5, d3,d3, d1,d1, d2,d2);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT9((`MM'))
.sort
#call gNNLOrBT9((`MM'),(`M2ep'))
.sort
#call zNNLOrBT9
.sort
#endprocedure

#procedure NNLOrGT7
#message this is "NNLOrGT7"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT7
#call pNNLOrGT7(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT7tNNLOrBT9(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT7\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT9'
#message symmetrize "NNLOrBT9"...
#call yNNLOrBT9
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT9'
#message read table for "NNLOrBT9"...
#include `ROOT'/tab/NNLOrBT9.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT7 :



*--#[ NNLOrGT8 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:38.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (hb), -p1 + p2 + v1 + v2, 6 -- 5
*   2: d2 (gl), -p1 + v1,           5 -- 1
*   3: d3 (gl), -p2 - v1,           6 -- 2
*   4: d1 (gl), -v1,                2 -- 1
*   5: d6 (gl), p1 - v2,            6 -- 4
*   6: d5 (gl), p2 + v2,            5 -- 3
*   7: d4 (gl), -v2,                4 -- 3
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT10.def

#procedure zNNLOrGT8
* vanishing sub-topologies
if ((count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d3,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d6,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT8(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT8tNNLOrBT10(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT10;
mu replace_(d7,d7, d2,d2, d3,d3, d1,d1, d6,d6, d5,d5, d4,d4);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT10((`MM'))
.sort
#call gNNLOrBT10((`MM'),(`M2ep'))
.sort
#call zNNLOrBT10
.sort
#endprocedure

#procedure NNLOrGT8
#message this is "NNLOrGT8"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT8
#call pNNLOrGT8(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT8tNNLOrBT10(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT8\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT10'
#message symmetrize "NNLOrBT10"...
#call yNNLOrBT10
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT10'
#message read table for "NNLOrBT10"...
#include `ROOT'/tab/NNLOrBT10.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT8 :



*--#[ NNLOrGT9 :

*  
* Generated by TopoID-2.0 (2016-XX-XX) on 2016-06-14 09:08:41.
*  
*   Note: Delete this comment on modification.
*  

#+
* topology line definitions:
*   1: d7 (gl), -p1 + p2 + v1 + v2, 6 -- 5
*   2: d6 (hb), p1 - v2,            6 -- 4
*   3: d4 (gl), -v2,                4 -- 3
*   4: d5 (gl), p2 + v2,            5 -- 3
*   5: d3 (gl), -p2 - v1,           6 -- 2
*   6: d1 (gl), -v1,                2 -- 1
*   7: d2 (gl), -p1 + v1,           5 -- 1
* (scheme w/o completion)
#-

#include `ROOT'/def/NNLOrBT11.def

#procedure zNNLOrGT9
* vanishing sub-topologies
if ((count(d6,1) >= 0)) 
  discard;
if ((count(d5,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d3,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d7,1) >= 0)) 
  discard;
if ((count(d2,1) >= 0) &&
    (count(d5,1) >= 0)) 
  discard;
if ((count(d1,1) >= 0) &&
    (count(d2,1) >= 0) &&
    (count(d3,1) >= 0)) 
  discard;
#endprocedure

#procedure pNNLOrGT9(MM)
* no partial fraction decomposition
#endprocedure

#procedure mNNLOrGT9tNNLOrBT11(marker,MM,M2ep)
* subset 1
* map from (1,2,3,4,5,6,7) to (1,2,3,4,5,6,7)
id (`marker') = NNLOrBT11;
mu replace_(d7,d7, d6,d6, d4,d4, d5,d5, d3,d3, d1,d1, d2,d2);
mu replace_(v1,v1, v2,v2);
.sort
#call cNNLOrBT11((`MM'))
.sort
#call gNNLOrBT11((`MM'),(`M2ep'))
.sort
#call zNNLOrBT11
.sort
#endprocedure

#procedure NNLOrGT9
#message this is "NNLOrGT9"...
* apply simplifications
#message apply simplifications...
repeat;
#call zNNLOrGT9
#call pNNLOrGT9(s)
endrepeat;
.sort
* map to independents
#message map to independents...
mu marker;
#call mNNLOrGT9tNNLOrBT11(marker,s,[(mu^2/s)^ep])
.sort
if (count(marker,1) != 0) 
  exit "Error: \"NNLOrGT9\" not completely mapped to independents.";
* symmetrize
#ifdef `symNNLOrBT11'
#message symmetrize "NNLOrBT11"...
#call yNNLOrBT11
.sort
#endif
* load reduction tables
#ifdef `useNNLOrBT11'
#message read table for "NNLOrBT11"...
#include `ROOT'/tab/NNLOrBT11.inx
.sort
#endif
#endprocedure

*--#] NNLOrGT9 :

