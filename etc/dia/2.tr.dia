//
// gen-1.7:
//   filtered QGRAF output by
//   underlying cuts,
//   color structures
//

// Tue Nov  4 10:18:37 2014

//
// qgraf-3.1.4:
//   output style by Alexey Pak,
//   modified by Jens Hoff
//

*--#[ PROLOGUE :

* qgraf.dat parameters:

*   output        = '2.tr.raw';
*   style         = '/users/ttp/jens/dev/bin/gen-new/qgraf.sty';
*   model         = 'qgraf.mod';
*   in            = gl[p1],gl[p2];
*   out           = gl[p1],gl[p2];
*   loops         = 2;
*   loop_momentum = v;
*   options       = onshell,nosnail,notadpole;
*   true = iprop[hb,1,1];
*   true = bridge[hb,0,0];

*--#] PROLOGUE :


/************************************************/

// FORM representation

*--#[ D1 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1+p2,-v2-p1-p2,v1+v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,5*3+1,-v1) *
  cP(gl,3*3+3,6*3+1,v1-p1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1+p2) *
  cP(hb,5*3+3,6*3+3,-v1-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D1 :

// GraphViz representation

graph "1" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 1, originally 1 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--5 [label="gl(-v1)",color=red,style=solid];
  3--6 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="hb(-v1-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D2 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1+p2,v1+v2,-v2-p1-p2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,5*3+1,-v1) *
  cP(gl,3*3+3,6*3+1,v1-p1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2+p1+p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D2 :

// GraphViz representation

graph "2" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 2, originally 2 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--5 [label="gl(-v1)",color=red,style=solid];
  3--6 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(-v1-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D3 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p1-p2,v1+v2,-v1+p1+p2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,5*3+1,-v1) *
  cP(hb,3*3+3,6*3+3,v1-p1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2+p1+p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D3 :

// GraphViz representation

graph "3" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 3, originally 3 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--5 [label="gl(-v1)",color=red,style=solid];
  3--6 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D4 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1+p2,v1-p1-p2,-v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1,-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1-p2,v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,5*3+1,v1-p1-p2) *
  cP(gl,3*3+3,5*3+2,-v1) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(hb,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+3,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D4 :

// GraphViz representation

graph "4" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 4, originally 10 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--5 [label="gl(-v1)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  4--6 [label="hb(-v2)",color=black,style=dashed];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D5 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,v1-p1-p2,-v1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,-p1-p2,v1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1-p2,v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,5*3+1,v1-p1-p2) *
  cP(hb,3*3+3,5*3+3,-v1) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(gl,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+2,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D5 :

// GraphViz representation

graph "5" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 5, originally 11 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--5 [label="hb(-v1)",color=black,style=dashed];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  4--6 [label="gl(-v2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D6 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,4*3+2,-v1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D6 :

// GraphViz representation

graph "6" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 6, originally 16 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="gl(-v1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D7 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-v2+p1+p2,v2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,4*3+2,-v1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+1,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D7 :

// GraphViz representation

graph "7" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 7, originally 17 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="gl(-v1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D8 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,-v1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+v2-p1-p2,-v2,-v1+p1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,4*3+2,-v1) *
  cP(hb,3*3+3,5*3+3,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+1,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D8 :

// GraphViz representation

graph "8" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 8, originally 18 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="gl(-v1)",color=red,style=solid];
  3--5 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D9 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,v1-p1-p2,-v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(hb,3*3+3,4*3+3,-v1) *
  cP(gl,3*3+2,5*3+1,v1-p1-p2) *
  cP(gl,4*3+2,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D9 :

// GraphViz representation

graph "9" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 9, originally 19 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="hb(-v1)",color=black,style=dashed];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D10 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-v2-p1-p2,v1+v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1,-v2-p2,v1+v2+p1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(gl,2*3+3,6*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p2) *
  cP(hb,4*3+3,5*3+3,v1+v2) *
  cP(gl,4*3+2,6*3+3,-v1-v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D10 :

// GraphViz representation

graph "10" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 10, originally 28 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p2)",color=red,style=solid];
  4--5 [label="hb(v1+v2)",color=black,style=dashed];
  4--6 [label="gl(-v1-v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D11 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1+v2,-v1-v2-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1,v1+v2+p1+p2,-v2-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(gl,2*3+3,6*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2+p2) *
  cP(gl,4*3+2,5*3+3,v1+v2) *
  cP(gl,4*3+3,6*3+2,-v1-v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D11 :

// GraphViz representation

graph "11" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 11, originally 29 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2+p2)",color=black,style=dashed];
  4--5 [label="gl(v1+v2)",color=red,style=solid];
  4--6 [label="gl(-v1-v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D12 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1+v2,-v1-v2-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p2,v1+v2+p1+p2,-v1-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(hb,2*3+3,6*3+3,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2+p2) *
  cP(gl,4*3+2,5*3+3,v1+v2) *
  cP(gl,4*3+3,6*3+2,-v1-v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D12 :

// GraphViz representation

graph "12" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 12, originally 30 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="hb(v1+p1)",color=black,style=dashed];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p2)",color=red,style=solid];
  4--5 [label="gl(v1+v2)",color=red,style=solid];
  4--6 [label="gl(-v1-v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D13 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1-v2+p1+p2,v1+v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(gl,2*3+3,6*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(hb,4*3+3,5*3+3,v1+v2) *
  cP(gl,4*3+2,6*3+3,-v1-v2+p1+p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D13 :

// GraphViz representation

graph "13" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 13, originally 43 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="hb(v1+v2)",color=black,style=dashed];
  4--6 [label="gl(-v1-v2+p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D14 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1+v2,-v1-v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1,v1+v2-p1-p2,-v2+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(gl,2*3+3,6*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p2) *
  cP(gl,4*3+2,5*3+3,v1+v2) *
  cP(gl,4*3+3,6*3+2,-v1-v2+p1+p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D14 :

// GraphViz representation

graph "14" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 14, originally 44 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p2)",color=black,style=dashed];
  4--5 [label="gl(v1+v2)",color=red,style=solid];
  4--6 [label="gl(-v1-v2+p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D15 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1+v2,-v1-v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1,v2,-v1-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p2,v1+v2-p1-p2,-v1+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,5*3+1,-v1) *
  cP(hb,2*3+3,6*3+3,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2-p2) *
  cP(gl,4*3+2,5*3+3,v1+v2) *
  cP(gl,4*3+3,6*3+2,-v1-v2+p1+p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D15 :

// GraphViz representation

graph "15" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 15, originally 45 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1)",color=red,style=solid];
  2--6 [label="hb(v1-p1)",color=black,style=dashed];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="gl(v1+v2)",color=red,style=solid];
  4--6 [label="gl(-v1-v2+p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D16 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v2-p2,-v1+v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p2) *
  cP(gl,4*3+3,6*3+1,-v1-p1-p2) *
  cP(hb,5*3+3,6*3+3,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D16 :

// GraphViz representation

graph "16" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 16, originally 46 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2+p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D17 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v1+v2-p1,-v2-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2+p2) *
  cP(gl,4*3+3,6*3+1,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D17 :

// GraphViz representation

graph "17" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 17, originally 47 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2+p2)",color=black,style=dashed];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D18 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p2,-v1+v2-p1,v1+p1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2+p2) *
  cP(hb,4*3+3,6*3+3,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D18 :

// GraphViz representation

graph "18" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 18, originally 49 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="hb(-v1-p1-p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D19 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1-p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v2-p2,-v1+v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p2) *
  cP(gl,4*3+2,6*3+1,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+3,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D19 :

// GraphViz representation

graph "19" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 19, originally 51 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D20 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p2,v2,v1-v2+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v2-p1,-v1+v2-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+3,6*3+1,-v1-p1-p2) *
  cP(hb,5*3+3,6*3+3,v1-v2+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D20 :

// GraphViz representation

graph "20" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 20, originally 52 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D21 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p2,v2,v1-v2+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v1+v2-p2,-v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2+p1) *
  cP(gl,4*3+3,6*3+1,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D21 :

// GraphViz representation

graph "21" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 21, originally 53 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2+p1)",color=black,style=dashed];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D22 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p2,v2,v1-v2+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p1,-v1+v2-p2,v1+p1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2+p1) *
  cP(hb,4*3+3,6*3+3,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D22 :

// GraphViz representation

graph "22" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 22, originally 55 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="hb(-v1-p1-p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D23 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,v1+p2,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1-p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p2,v2,v1-v2+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1+p2,-v2-p1,-v1+v2-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+2,6*3+1,-v1-p1-p2) *
  cP(gl,5*3+3,6*3+3,v1-v2+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D23 :

// GraphViz representation

graph "23" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 23, originally 57 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D24 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v2+p2,-v1+v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(hb,5*3+3,6*3+3,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D24 :

// GraphViz representation

graph "24" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 24, originally 106 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D25 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1+v2+p1,-v2+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D25 :

// GraphViz representation

graph "25" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 25, originally 107 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D26 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p2,-v1+v2+p1,v1-p1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D26 :

// GraphViz representation

graph "26" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 26, originally 109 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D27 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v2+p2,-v1+v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1-p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(gl,4*3+2,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+3,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D27 :

// GraphViz representation

graph "27" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 27, originally 111 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D28 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v2+p1,-v1+v2+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(hb,5*3+3,6*3+3,v1-v2-p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D28 :

// GraphViz representation

graph "28" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 28, originally 112 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D29 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1+v2+p2,-v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p1) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D29 :

// GraphViz representation

graph "29" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 29, originally 113 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p1)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D30 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p1,-v1+v2+p2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2-p1) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D30 :

// GraphViz representation

graph "30" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 30, originally 115 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D31 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1-p2,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v2+p1,-v1+v2+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+2,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+3,6*3+3,v1-v2-p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D31 :

// GraphViz representation

graph "31" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 31, originally 117 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D32 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1,-v1-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v1+v2+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1,-v1-v2-p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(hb,3*3+3,4*3+3,v1+p1+p2) *
  cP(gl,3*3+2,6*3+1,-v1-p1) *
  cP(gl,5*3+2,6*3+2,v1+v2+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D32 :

// GraphViz representation

graph "32" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 32, originally 120 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="hb(v1+p1+p2)",color=black,style=dashed];
  3--6 [label="gl(-v1-p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D33 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1+p1+p2,-v1-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1-p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v1+v2+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1,-v1-v2-p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1+p1) *
  cP(gl,3*3+2,4*3+2,v1+p1+p2) *
  cP(gl,3*3+3,6*3+1,-v1-p1) *
  cP(gl,5*3+2,6*3+2,v1+v2+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D33 :

// GraphViz representation

graph "33" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 33, originally 122 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="gl(v1+p1+p2)",color=red,style=solid];
  3--6 [label="gl(-v1-p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D34 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v1+v2-p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v1-v2+p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,4*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(hb,3*3+3,4*3+3,v1-p1-p2) *
  cP(gl,3*3+2,6*3+1,-v1+p1) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D34 :

// GraphViz representation

graph "34" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 34, originally 145 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="hb(v1-p1-p2)",color=black,style=dashed];
  3--6 [label="gl(-v1+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D35 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1-p1-p2,-v1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v1+v2-p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v1-v2+p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(hb,2*3+3,4*3+3,-v1) *
  cP(gl,2*3+2,5*3+1,v1-p1) *
  cP(gl,3*3+2,4*3+2,v1-p1-p2) *
  cP(gl,3*3+3,6*3+1,-v1+p1) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D35 :

// GraphViz representation

graph "35" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 35, originally 147 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--4 [label="hb(-v1)",color=black,style=dashed];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--6 [label="gl(-v1+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D36 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v2,v2-p1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1+p2,-v1+v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+3,6*3+1,-v1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D36 :

// GraphViz representation

graph "36" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 36, originally 148 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--6 [label="gl(-v1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2+p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D37 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v2,v2-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v1+v2-p1,-v2+p1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+3,6*3+1,-v1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D37 :

// GraphViz representation

graph "37" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 37, originally 149 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--6 [label="gl(-v1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2-p1-p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D38 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,v1-v2+p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1+p2,-v1+v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+3,6*3+1,-v1+p2) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D38 :

// GraphViz representation

graph "38" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 38, originally 150 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--6 [label="gl(-v1+p2)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D39 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v2,v2-p1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p1+p2,-v1+v2-p1,v1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(hb,3*3+3,6*3+3,-v1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D39 :

// GraphViz representation

graph "39" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 39, originally 151 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--6 [label="hb(-v1+p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D40 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v2,v2-p1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,v1-v2+p1,-v1-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1+p2,-v1+v2-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,5*3+3,v1+p1) *
  cP(gl,3*3+3,6*3+1,-v1+p2) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,v1-v2+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D40 :

// GraphViz representation

graph "40" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 40, originally 152 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="hb(v1+p1)",color=black,style=dashed];
  3--6 [label="gl(-v1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D41 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1-p2,-v1+v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+3,6*3+1,-v1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1+p2) *
  cP(hb,5*3+3,6*3+3,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D41 :

// GraphViz representation

graph "41" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 41, originally 178 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--6 [label="gl(-v1-p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="hb(v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D42 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v1+v2+p1,-v2-p1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+3,6*3+1,-v1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D42 :

// GraphViz representation

graph "42" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 42, originally 179 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--6 [label="gl(-v1-p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D43 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v1-v2-p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1-p2,-v1+v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+3,6*3+1,-v1-p2) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(gl,5*3+2,6*3+3,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D43 :

// GraphViz representation

graph "43" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 43, originally 180 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--6 [label="gl(-v1-p2)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D44 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p1-p2,-v1+v2+p1,v1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(hb,3*3+3,6*3+3,-v1-p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2+p1+p2) *
  cP(gl,5*3+3,6*3+2,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D44 :

// GraphViz representation

graph "44" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 44, originally 181 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--6 [label="hb(-v1-p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D45 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v2,v2+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,v1-v2-p1,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1-p2,-v1+v2+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,5*3+3,v1-p1) *
  cP(gl,3*3+3,6*3+1,-v1-p2) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1+p2) *
  cP(gl,5*3+2,6*3+3,v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D45 :

// GraphViz representation

graph "45" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 45, originally 182 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="hb(v1-p1)",color=black,style=dashed];
  3--6 [label="gl(-v1-p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D46 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v1-p2,p1+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-p1-p2,-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(gl,3*3+3,5*3+2,-v1+p2) *
  cP(gl,4*3+2,6*3+2,v2-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+3,6*3+1,p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D46 :

// GraphViz representation

graph "46" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 46, originally 184 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v1+p2)",color=red,style=solid];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v2)",color=black,style=dashed];
  5--6 [label="gl(p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D47 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,p1+p2,v1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-p1-p2,-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1+p1) *
  cP(hb,3*3+3,5*3+3,-v1+p2) *
  cP(gl,4*3+2,6*3+2,v2-p1-p2) *
  cP(gl,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+2,6*3+1,p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D47 :

// GraphViz representation

graph "47" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 47, originally 185 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="hb(-v1+p2)",color=black,style=dashed];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v2)",color=red,style=solid];
  5--6 [label="gl(p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D48 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1-p2,p1+p2,-v1-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-p1-p2,-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,5*3+3,v1+p1) *
  cP(gl,3*3+3,5*3+1,-v1+p2) *
  cP(gl,4*3+2,6*3+2,v2-p1-p2) *
  cP(gl,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+2,6*3+1,p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D48 :

// GraphViz representation

graph "48" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 48, originally 186 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="hb(v1+p1)",color=black,style=dashed];
  3--5 [label="gl(-v1+p2)",color=red,style=solid];
  4--6 [label="gl(v2-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v2)",color=red,style=solid];
  5--6 [label="gl(p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D49 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v1+p2,-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(gl,3*3+3,5*3+2,-v1-p2) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(hb,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+3,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D49 :

// GraphViz representation

graph "49" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 49, originally 204 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v1-p2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  4--6 [label="hb(-v2)",color=black,style=dashed];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D50 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-p1-p2,v1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,5*3+1,v1-p1) *
  cP(hb,3*3+3,5*3+3,-v1-p2) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(gl,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+2,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D50 :

// GraphViz representation

graph "50" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 50, originally 205 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="hb(-v1-p2)",color=black,style=dashed];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  4--6 [label="gl(-v2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D51 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,v2+p1+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,-p1-p2,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,5*3+3,v1-p1) *
  cP(gl,3*3+3,5*3+1,-v1-p2) *
  cP(gl,4*3+2,6*3+2,v2+p1+p2) *
  cP(gl,4*3+3,6*3+3,-v2) *
  cP(gl,5*3+2,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D51 :

// GraphViz representation

graph "51" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 51, originally 206 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--5 [label="hb(v1-p1)",color=black,style=dashed];
  3--5 [label="gl(-v1-p2)",color=red,style=solid];
  4--6 [label="gl(v2+p1+p2)",color=red,style=solid];
  4--6 [label="gl(-v2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D52 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1,v1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1-p2,-v1+v2+p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p2,v1-v2-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p1) *
  cP(gl,3*3+3,5*3+1,-v1+p2) *
  cP(gl,4*3+3,6*3+1,v1-p2) *
  cP(gl,5*3+2,6*3+2,-v1+v2+p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D52 :

// GraphViz representation

graph "52" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 52, originally 208 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v1+p2)",color=red,style=solid];
  4--6 [label="gl(v1-p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D53 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1,v1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1-p2,-v1+v2+p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-v2-p2,v2,-v1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p1) *
  cP(gl,3*3+3,5*3+1,-v1+p2) *
  cP(hb,4*3+3,6*3+3,v1-p2) *
  cP(gl,5*3+2,6*3+1,-v1+v2+p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D53 :

// GraphViz representation

graph "53" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 53, originally 209 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v1+p2)",color=red,style=solid];
  4--6 [label="hb(v1-p2)",color=black,style=dashed];
  5--6 [label="gl(-v1+v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D54 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1,v1-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+v2+p2,-v2,v1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2,v1-v2-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p1) *
  cP(hb,3*3+3,5*3+3,-v1+p2) *
  cP(gl,4*3+3,6*3+1,v1-p2) *
  cP(gl,5*3+1,6*3+2,-v1+v2+p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D54 :

// GraphViz representation

graph "54" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 54, originally 210 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--5 [label="hb(-v1+p2)",color=black,style=dashed];
  4--6 [label="gl(v1-p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D55 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1-p2,-v1-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1-p2,-v1+v2+p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2,v1-v2-p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p1) *
  cP(gl,3*3+3,5*3+1,-v1+p2) *
  cP(gl,4*3+2,6*3+1,v1-p2) *
  cP(gl,5*3+2,6*3+2,-v1+v2+p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D55 :

// GraphViz representation

graph "55" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 55, originally 211 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1+p1)",color=black,style=dashed];
  3--5 [label="gl(-v1+p2)",color=red,style=solid];
  4--6 [label="gl(v1-p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D56 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p2,v1-p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1-p1,-v1+v2+p1,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1,v1-v2-p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p2) *
  cP(gl,3*3+3,5*3+1,-v1+p1) *
  cP(gl,4*3+3,6*3+1,v1-p1) *
  cP(gl,5*3+2,6*3+2,-v1+v2+p1) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D56 :

// GraphViz representation

graph "56" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 56, originally 213 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v1+p1)",color=red,style=solid];
  4--6 [label="gl(v1-p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p1)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D57 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p2,v1-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1-p1,-v1+v2+p1,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-v2-p1,v2,-v1+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p2) *
  cP(gl,3*3+3,5*3+1,-v1+p1) *
  cP(hb,4*3+3,6*3+3,v1-p1) *
  cP(gl,5*3+2,6*3+1,-v1+v2+p1) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D57 :

// GraphViz representation

graph "57" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 57, originally 214 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v1+p1)",color=red,style=solid];
  4--6 [label="hb(v1-p1)",color=black,style=dashed];
  5--6 [label="gl(-v1+v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D58 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p2,v1-p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+v2+p1,-v2,v1-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1,v1-v2-p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p2) *
  cP(hb,3*3+3,5*3+3,-v1+p1) *
  cP(gl,4*3+3,6*3+1,v1-p1) *
  cP(gl,5*3+1,6*3+2,-v1+v2+p1) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D58 :

// GraphViz representation

graph "58" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 58, originally 215 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p2)",color=red,style=solid];
  3--5 [label="hb(-v1+p1)",color=black,style=dashed];
  4--6 [label="gl(v1-p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D59 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1-p1,-v1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1-p1,-v1+v2+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1,v1-v2-p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p2) *
  cP(gl,3*3+3,5*3+1,-v1+p1) *
  cP(gl,4*3+2,6*3+1,v1-p1) *
  cP(gl,5*3+2,6*3+2,-v1+v2+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D59 :

// GraphViz representation

graph "59" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 59, originally 216 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1+p2)",color=black,style=dashed];
  3--5 [label="gl(-v1+p1)",color=red,style=solid];
  4--6 [label="gl(v1-p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D60 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1,v1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,-v1+v2-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p2,v1-v2+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p1) *
  cP(gl,3*3+3,5*3+1,-v1-p2) *
  cP(gl,4*3+3,6*3+1,v1+p2) *
  cP(gl,5*3+2,6*3+2,-v1+v2-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D60 :

// GraphViz representation

graph "60" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 60, originally 258 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v1-p2)",color=red,style=solid];
  4--6 [label="gl(v1+p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D61 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1,v1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,-v1+v2-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-v2+p2,v2,-v1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p1) *
  cP(gl,3*3+3,5*3+1,-v1-p2) *
  cP(hb,4*3+3,6*3+3,v1+p2) *
  cP(gl,5*3+2,6*3+1,-v1+v2-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D61 :

// GraphViz representation

graph "61" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 61, originally 259 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="gl(-v1-p2)",color=red,style=solid];
  4--6 [label="hb(v1+p2)",color=black,style=dashed];
  5--6 [label="gl(-v1+v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D62 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1,v1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+v2-p2,-v2,v1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p2,v1-v2+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p1) *
  cP(hb,3*3+3,5*3+3,-v1-p2) *
  cP(gl,4*3+3,6*3+1,v1+p2) *
  cP(gl,5*3+1,6*3+2,-v1+v2-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D62 :

// GraphViz representation

graph "62" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 62, originally 260 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--5 [label="hb(-v1-p2)",color=black,style=dashed];
  4--6 [label="gl(v1+p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D63 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1+p2,-v1+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,-v1+v2-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p2,v1-v2+p2,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p1) *
  cP(gl,3*3+3,5*3+1,-v1-p2) *
  cP(gl,4*3+2,6*3+1,v1+p2) *
  cP(gl,5*3+2,6*3+2,-v1+v2-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D63 :

// GraphViz representation

graph "63" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 63, originally 261 (factor = +1/2)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1-p1)",color=black,style=dashed];
  3--5 [label="gl(-v1-p2)",color=red,style=solid];
  4--6 [label="gl(v1+p2)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D64 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p2,v1+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,-v1+v2-p1,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1,v1-v2+p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p2) *
  cP(gl,3*3+3,5*3+1,-v1-p1) *
  cP(gl,4*3+3,6*3+1,v1+p1) *
  cP(gl,5*3+2,6*3+2,-v1+v2-p1) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D64 :

// GraphViz representation

graph "64" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 64, originally 263 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v1-p1)",color=red,style=solid];
  4--6 [label="gl(v1+p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p1)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D65 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p2,v1+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,-v1+v2-p1,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-v2+p1,v2,-v1-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p2) *
  cP(gl,3*3+3,5*3+1,-v1-p1) *
  cP(hb,4*3+3,6*3+3,v1+p1) *
  cP(gl,5*3+2,6*3+1,-v1+v2-p1) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D65 :

// GraphViz representation

graph "65" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 65, originally 264 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v1-p1)",color=red,style=solid];
  4--6 [label="hb(v1+p1)",color=black,style=dashed];
  5--6 [label="gl(-v1+v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D66 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p2,v1+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+v2-p1,-v2,v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1,v1-v2+p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p2) *
  cP(hb,3*3+3,5*3+3,-v1-p1) *
  cP(gl,4*3+3,6*3+1,v1+p1) *
  cP(gl,5*3+1,6*3+2,-v1+v2-p1) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D66 :

// GraphViz representation

graph "66" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 66, originally 265 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p2)",color=red,style=solid];
  3--5 [label="hb(-v1-p1)",color=black,style=dashed];
  4--6 [label="gl(v1+p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D67 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1+p1,-v1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,-v1+v2-p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1,v1-v2+p1,v2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p2) *
  cP(gl,3*3+3,5*3+1,-v1-p1) *
  cP(gl,4*3+2,6*3+1,v1+p1) *
  cP(gl,5*3+2,6*3+2,-v1+v2-p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D67 :

// GraphViz representation

graph "67" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 67, originally 266 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1-p2)",color=black,style=dashed];
  3--5 [label="gl(-v1-p1)",color=red,style=solid];
  4--6 [label="gl(v1+p1)",color=red,style=solid];
  5--6 [label="gl(-v1+v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D68 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1,-v1+v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(hb,4*3+3,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D68 :

// GraphViz representation

graph "68" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 68, originally 268 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="hb(v1-v2-p1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D69 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v1-v2-p1+p2,-v1+v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1,-v1+v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(hb,4*3+3,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+2,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D69 :

// GraphViz representation

graph "69" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 69, originally 269 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--5 [label="hb(-v1+v2+p1)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D70 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v1+v2+p1-p2,-v2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2+p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D70 :

// GraphViz representation

graph "70" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 70, originally 270 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2+p1)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D71 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v2+p1,-v2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v1-v2-p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1,-v1+v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(hb,3*3+3,5*3+3,-v2) *
  cP(gl,3*3+2,6*3+2,v2+p1) *
  cP(gl,4*3+2,5*3+2,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D71 :

// GraphViz representation

graph "71" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 71, originally 271 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="hb(-v2)",color=black,style=dashed];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D72 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2-p1,-v1+v2+p1-p2,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(hb,2*3+3,6*3+3,-v1-p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2+p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D72 :

// GraphViz representation

graph "72" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 72, originally 272 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="hb(-v1-p2)",color=black,style=dashed];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D73 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,v1-v2-p1,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,-v2-p1,-v1+v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,5*3+3,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,5*3+1,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+2,5*3+2,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D73 :

// GraphViz representation

graph "73" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 73, originally 273 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="hb(v1-p1)",color=black,style=dashed];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D74 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v1-v2-p1+p2,-v1+v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v2+p2,-v1+v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(hb,4*3+3,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+2,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D74 :

// GraphViz representation

graph "74" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 74, originally 276 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="hb(-v1+v2+p1)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D75 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1,-v1+v2+p1-p2,-v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p2) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D75 :

// GraphViz representation

graph "75" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 75, originally 277 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p2)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D76 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1+p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p1,v1-v2-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v2+p2,-v1+v2+p1-p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p1) *
  cP(gl,2*3+2,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D76 :

// GraphViz representation

graph "76" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 76, originally 281 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D77 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v1-v2-p1+p1,-v1+v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p2,-v1+v2+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(hb,4*3+3,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+2,6*3+3,v1-v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D77 :

// GraphViz representation

graph "77" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 77, originally 283 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="hb(-v1+v2+p1)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D78 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v1+v2+p1,v1-v2-p1+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v1+v2+p1-p1,-v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p2) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D78 :

// GraphViz representation

graph "78" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 78, originally 284 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p2)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D79 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v1+v2+p1,v1-v2-p1+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v2,v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p2,-v1+v2+p1-p1) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p1) *
  cP(gl,2*3+2,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p2) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D79 :

// GraphViz representation

graph "79" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 79, originally 288 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p2)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D80 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v1-v2-p2+p2,-v1+v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v2+p1,-v1+v2+p2-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p2) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(hb,4*3+3,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+2,6*3+3,v1-v2-p2+p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D80 :

// GraphViz representation

graph "80" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 80, originally 290 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="hb(-v1+v2+p2)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D81 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p2,v1-v2-p2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1,-v1+v2+p2-p2,-v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p2) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+3,6*3+2,v1-v2-p2+p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D81 :

// GraphViz representation

graph "81" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 81, originally 291 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p1)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2+p2)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D82 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,v1-p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1+p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v1+v2+p2,v1-v2-p2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,-v2+p1,-v1+v2+p2-p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p2) *
  cP(gl,2*3+2,6*3+1,-v1+p1) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+3,6*3+3,v1-v2-p2+p2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D82 :

// GraphViz representation

graph "82" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 82, originally 295 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p2)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D83 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v1-v2-p2+p1,-v1+v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p2) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(hb,4*3+3,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+2,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D83 :

// GraphViz representation

graph "83" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 83, originally 297 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="hb(-v1+v2+p2)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D84 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v1+v2+p2,v1-v2-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v1+v2+p2-p1,-v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p2) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+3,6*3+2,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D84 :

// GraphViz representation

graph "84" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 84, originally 298 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p1)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2+p2)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D85 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,v1-p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v1+v2+p2,v1-v2-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2,v2,v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p2) *
  cP(gl,2*3+2,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2+p2) *
  cP(gl,4*3+3,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D85 :

// GraphViz representation

graph "85" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 85, originally 302 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p2)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2+p2)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D86 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p2,-v1+v2-p1,v1-v2-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1+p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2-p1) *
  cP(hb,4*3+3,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D86 :

// GraphViz representation

graph "86" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 86, originally 303 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1+p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2-p1)",color=red,style=solid];
  4--6 [label="hb(v1-v2-p2+p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D87 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p2,v1-v2-p2+p1,-v1+v2-p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1+p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(hb,4*3+3,5*3+3,-v1+v2-p1) *
  cP(gl,4*3+2,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D87 :

// GraphViz representation

graph "87" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 87, originally 304 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1+p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="hb(-v1+v2-p1)",color=black,style=dashed];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D88 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v1+v2-p1,v1-v2-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,-v1+v2+p2-p1,-v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1+p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2-p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D88 :

// GraphViz representation

graph "88" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 88, originally 305 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1+p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2-p1)",color=black,style=dashed];
  4--5 [label="gl(-v1+v2-p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D89 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,v2-p1,-v2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v1+v2-p1,v1-v2-p2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1-p1,v1-v2+p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1+p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(hb,3*3+3,5*3+3,-v2) *
  cP(gl,3*3+2,6*3+2,v2-p1) *
  cP(gl,4*3+2,5*3+2,-v1+v2-p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D89 :

// GraphViz representation

graph "89" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 89, originally 306 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1+p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="hb(-v2)",color=black,style=dashed];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2-p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D90 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v1+v2-p1,v1-v2-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1-p1,v2,v1-v2+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p1,-v1+v2+p2-p1,v1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1+p1) *
  cP(hb,2*3+3,6*3+3,-v1+p2) *
  cP(gl,3*3+2,5*3+2,-v2) *
  cP(gl,3*3+3,6*3+1,v2-p1) *
  cP(gl,4*3+2,5*3+3,-v1+v2-p1) *
  cP(gl,4*3+3,6*3+2,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D90 :

// GraphViz representation

graph "90" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 90, originally 307 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1+p1)",color=red,style=solid];
  2--6 [label="hb(-v1+p2)",color=black,style=dashed];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2-p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D91 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v1+v2-p1,v1-v2-p2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,v1-v2+p1,-v1-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,-v2+p1,-v1+v2+p2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,5*3+3,v1+p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,5*3+1,-v2) *
  cP(gl,3*3+3,6*3+2,v2-p1) *
  cP(gl,4*3+2,5*3+2,-v1+v2-p1) *
  cP(gl,4*3+3,6*3+3,v1-v2-p2+p1) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D91 :

// GraphViz representation

graph "91" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 91, originally 308 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="hb(v1+p1)",color=black,style=dashed];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2-p1)",color=red,style=solid];
  4--5 [label="gl(-v1+v2-p1)",color=red,style=solid];
  4--6 [label="gl(v1-v2-p2+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D92 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p1,v1+v2-p1+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,v2-p2,-v1-v2+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p1) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(hb,5*3+3,6*3+3,v1+v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D92 :

// GraphViz representation

graph "92" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 92, originally 310 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="hb(v1+v2-p1+p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D93 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p1,v1+v2-p1+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v1-v2+p1-p1,v2-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p1) *
  cP(hb,4*3+3,6*3+3,-v2+p2) *
  cP(gl,5*3+3,6*3+2,v1+v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D93 :

// GraphViz representation

graph "93" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 93, originally 311 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="hb(-v2+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D94 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v1+v2-p1+p1,-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,v2-p2,-v1-v2+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(hb,3*3+3,5*3+3,v2+p1) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(gl,5*3+2,6*3+3,v1+v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D94 :

// GraphViz representation

graph "94" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 94, originally 312 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="hb(v2+p1)",color=black,style=dashed];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D95 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p1,v1+v2-p1+p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v2-p2,-v1-v2+p1-p1,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(hb,2*3+3,6*3+3,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p1) *
  cP(gl,4*3+3,6*3+1,-v2+p2) *
  cP(gl,5*3+3,6*3+2,v1+v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D95 :

// GraphViz representation

graph "95" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 95, originally 314 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D96 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v2-p1,v1+v2-p1+p1,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,v2-p2,-v1-v2+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,5*3+3,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+1,v2+p1) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(gl,5*3+2,6*3+3,v1+v2-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D96 :

// GraphViz representation

graph "96" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 96, originally 315 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="hb(v1-p1)",color=black,style=dashed];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D97 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p2,v1+v2-p1+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,v2-p1,-v1-v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p2) *
  cP(gl,4*3+3,6*3+2,-v2+p1) *
  cP(hb,5*3+3,6*3+3,v1+v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D97 :

// GraphViz representation

graph "97" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 97, originally 317 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="hb(v1+v2-p1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D98 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p2,v1+v2-p1+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1+p2,-v1-v2+p1-p2,v2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p2) *
  cP(hb,4*3+3,6*3+3,-v2+p1) *
  cP(gl,5*3+3,6*3+2,v1+v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D98 :

// GraphViz representation

graph "98" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 98, originally 318 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="hb(-v2+p1)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D99 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,v1+v2-p1+p2,-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,v2-p1,-v1-v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(hb,3*3+3,5*3+3,v2+p2) *
  cP(gl,4*3+3,6*3+2,-v2+p1) *
  cP(gl,5*3+2,6*3+3,v1+v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D99 :

// GraphViz representation

graph "99" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 99, originally 319 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="hb(v2+p2)",color=black,style=dashed];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D100 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2-p2,v1+v2-p1+p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v2-p1,-v1-v2+p1-p2,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(hb,2*3+3,6*3+3,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2+p2) *
  cP(gl,4*3+3,6*3+1,-v2+p1) *
  cP(gl,5*3+3,6*3+2,v1+v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D100 :

// GraphViz representation

graph "100" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 100, originally 321 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D101 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v2-p2,v1+v2-p1+p2,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2,v2-p1,-v1-v2+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,5*3+3,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+1,v2+p2) *
  cP(gl,4*3+3,6*3+2,-v2+p1) *
  cP(gl,5*3+2,6*3+3,v1+v2-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D101 :

// GraphViz representation

graph "101" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 101, originally 322 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="hb(v1-p1)",color=black,style=dashed];
  2--6 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2+p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D102 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1,v2-p2,-v1-v2+p1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2-p2) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(hb,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D102 :

// GraphViz representation

graph "102" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 102, originally 324 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="hb(v1+v2-p1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D103 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v2-p2,-v2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,-v2+p2,v2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,v2-p2,-v1-v2+p1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p1) *
  cP(hb,3*3+3,4*3+3,-v2) *
  cP(gl,3*3+2,5*3+2,v2-p2) *
  cP(gl,4*3+2,6*3+2,-v2+p2) *
  cP(gl,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D103 :

// GraphViz representation

graph "103" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 103, originally 327 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--4 [label="hb(-v2)",color=black,style=dashed];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D104 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1+p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1,v2-p2,-v1-v2+p1+p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p1) *
  cP(gl,2*3+2,6*3+1,-v1+p1) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2-p2) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(gl,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D104 :

// GraphViz representation

graph "104" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 104, originally 330 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p1)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D105 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p2,v2-p1,-v1-v2+p1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2-p2) *
  cP(gl,4*3+3,6*3+2,-v2+p1) *
  cP(hb,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D105 :

// GraphViz representation

graph "105" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 105, originally 338 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="hb(v1+v2-p1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D106 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v2-p2,-v2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,-v2+p1,v2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,v2-p1,-v1-v2+p1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,6*3+1,-v1+p2) *
  cP(hb,3*3+3,4*3+3,-v2) *
  cP(gl,3*3+2,5*3+2,v2-p2) *
  cP(gl,4*3+2,6*3+2,-v2+p1) *
  cP(gl,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D106 :

// GraphViz representation

graph "106" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 106, originally 341 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--4 [label="hb(-v2)",color=black,style=dashed];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D107 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v2,-v2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,-v2+p2,v1+v2-p1-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p2,v2-p1,-v1-v2+p1+p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,5*3+1,v1-p1) *
  cP(gl,2*3+2,6*3+1,-v1+p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,5*3+2,v2-p2) *
  cP(gl,4*3+3,6*3+2,-v2+p1) *
  cP(gl,5*3+3,6*3+3,v1+v2-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D107 :

// GraphViz representation

graph "107" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 107, originally 344 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--6 [label="gl(-v1+p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--5 [label="gl(v2-p2)",color=red,style=solid];
  4--6 [label="gl(-v2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D108 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v1+p2,-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1,v2-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,5*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(hb,4*3+3,6*3+3,-v2+p2) *
  cP(gl,5*3+3,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D108 :

// GraphViz representation

graph "108" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 108, originally 352 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="hb(-v2+p2)",color=black,style=dashed];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D109 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1,v1+p2,-p1-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,p1+p2,v2-p2,-v2-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(gl,2*3+3,5*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(hb,3*3+3,6*3+3,v2+p1) *
  cP(gl,4*3+3,6*3+2,-v2+p2) *
  cP(gl,5*3+3,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D109 :

// GraphViz representation

graph "109" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 109, originally 353 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="hb(v2+p1)",color=black,style=dashed];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D110 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1,-p1-p2,v1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1,v2-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,5*3+1,v1-p1) *
  cP(hb,2*3+3,5*3+3,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+3,6*3+3,-v2+p2) *
  cP(gl,5*3+2,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D110 :

// GraphViz representation

graph "110" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 110, originally 355 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D111 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v2,-v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,-p1-p2,-v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,p1+p2,-v2-p1,v2-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,5*3+3,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+2,4*3+2,-v2) *
  cP(gl,3*3+3,6*3+2,v2+p1) *
  cP(gl,4*3+3,6*3+3,-v2+p2) *
  cP(gl,5*3+2,6*3+1,-p1-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D111 :

// GraphViz representation

graph "111" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 111, originally 356 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--5 [label="hb(v1-p1)",color=black,style=dashed];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(-v2)",color=red,style=solid];
  3--6 [label="gl(v2+p1)",color=red,style=solid];
  4--6 [label="gl(-v2+p2)",color=red,style=solid];
  5--6 [label="gl(-p1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D112 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1-p1,-v2-p2,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p1) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D112 :

// GraphViz representation

graph "112" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 112, originally 370 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D113 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v2+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,-v1-v2-p2,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p1,-v2-p2,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p1) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2+p2) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D113 :

// GraphViz representation

graph "113" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 113, originally 372 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D114 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,-v1-v2-p2,v1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p1,-v2-p2,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,5*3+3,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p1) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D114 :

// GraphViz representation

graph "114" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 114, originally 374 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="hb(-v1-p2)",color=black,style=dashed];
  3--6 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D115 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p1,-v2-p2,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+2,6*3+1,v1-p1+p1) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D115 :

// GraphViz representation

graph "115" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 115, originally 375 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D116 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p1-p2,-v2-p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D116 :

// GraphViz representation

graph "116" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 116, originally 377 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D117 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v2+p1,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,-v1-v2-p2,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p2,-v2-p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p2) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2+p1) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D117 :

// GraphViz representation

graph "117" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 117, originally 379 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D118 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,-v1-v2-p2,v1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p2,-v2-p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,5*3+3,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1-p1+p2) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D118 :

// GraphViz representation

graph "118" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 118, originally 381 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--5 [label="hb(-v1-p2)",color=black,style=dashed];
  3--6 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D119 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p1-p2,-v2-p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+2,6*3+1,v1-p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D119 :

// GraphViz representation

graph "119" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 119, originally 382 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D120 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p2,v1-p2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p2-p1,-v2-p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p1) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D120 :

// GraphViz representation

graph "120" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 120, originally 391 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D121 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p2,v1-p2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v2+p2,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,-v1-v2-p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p1,-v2-p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p1) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2+p2) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D121 :

// GraphViz representation

graph "121" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 121, originally 393 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D122 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p2,v1-p2+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,-v1-v2-p1,v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p1,-v2-p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(hb,2*3+3,5*3+3,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p1) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D122 :

// GraphViz representation

graph "122" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 122, originally 395 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="hb(-v1-p1)",color=black,style=dashed];
  3--6 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D123 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p2+p1,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,-v2,v2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p1,-v2-p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+2,6*3+1,v1-p2+p1) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p2) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D123 :

// GraphViz representation

graph "123" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 123, originally 396 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p2)",color=black,style=dashed];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D124 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1-p2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1+p2-p2,-v2-p1,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D124 :

// GraphViz representation

graph "124" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 124, originally 398 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D125 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1-p2+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v2+p1,-v2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,-v1-v2-p1,v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p2,-v2-p1,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p2) *
  cP(hb,4*3+3,5*3+3,-v2) *
  cP(gl,4*3+2,6*3+2,v2+p1) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D125 :

// GraphViz representation

graph "125" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 125, originally 400 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p2)",color=red,style=solid];
  4--5 [label="hb(-v2)",color=black,style=dashed];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D126 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1-p2+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v2,-v1-v2-p1,v1+p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p2,-v2-p1,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(hb,2*3+3,5*3+3,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1-p2+p2) *
  cP(gl,4*3+2,5*3+1,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(gl,5*3+2,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D126 :

// GraphViz representation

graph "126" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 126, originally 402 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--5 [label="hb(-v1-p1)",color=black,style=dashed];
  3--6 [label="gl(v1-p2+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D127 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p2+p2,-v1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,-v2,v2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1+p2-p2,-v2-p1,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+2,6*3+1,v1-p2+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2+p1) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D127 :

// GraphViz representation

graph "127" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 127, originally 403 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p2)",color=black,style=dashed];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1-p2+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2+p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D128 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p2) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D128 :

// GraphViz representation

graph "128" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 128, originally 419 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D129 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,v1+v2+p1,-v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2-p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D129 :

// GraphViz representation

graph "129" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 129, originally 420 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2-p2)",color=black,style=dashed];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D130 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p2,v1+v2+p1,-v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(hb,3*3+3,6*3+3,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2-p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D130 :

// GraphViz representation

graph "130" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 130, originally 422 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="hb(v1+p1+p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D131 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1-p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p2,v1+v2+p1) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1+p1) *
  cP(gl,2*3+2,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p2) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D131 :

// GraphViz representation

graph "131" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 131, originally 425 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D132 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D132 :

// GraphViz representation

graph "132" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 132, originally 426 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D133 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,v1+v2+p2,-v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2-p1) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D133 :

// GraphViz representation

graph "133" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 133, originally 427 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2-p1)",color=black,style=dashed];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D134 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p1,v1+v2+p2,-v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(hb,3*3+3,6*3+3,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2-p1) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D134 :

// GraphViz representation

graph "134" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 134, originally 429 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="hb(v1+p1+p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D135 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1-p1,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p1,v1+v2+p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1+p1) *
  cP(gl,2*3+2,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D135 :

// GraphViz representation

graph "135" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 135, originally 432 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D136 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p2,v1+v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p2) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D136 :

// GraphViz representation

graph "136" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 136, originally 440 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D137 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,v1+v2+p1,-v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2-p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D137 :

// GraphViz representation

graph "137" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 137, originally 441 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2-p2)",color=black,style=dashed];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D138 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,v1,-v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p2,v1+v2+p1,-v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p1) *
  cP(hb,3*3+3,6*3+3,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2-p2) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D138 :

// GraphViz representation

graph "138" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 138, originally 443 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="hb(v1+p1+p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D139 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p2,v1+p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1-p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,-v2,v2-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p1,v2,-v1-v2-p1) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p2,v1+v2+p1) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1+p2) *
  cP(gl,2*3+2,5*3+1,-v1-p1) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p2) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p1) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D139 :

// GraphViz representation

graph "139" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 139, originally 446 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p1)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p2)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D140 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p1,v1+v2+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1) *
  cP(hb,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D140 :

// GraphViz representation

graph "140" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 140, originally 447 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="hb(-v1-v2-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D141 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-p1-p2,v1+v2+p2,-v2+p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(hb,4*3+3,6*3+3,v2-p1) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D141 :

// GraphViz representation

graph "141" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 141, originally 448 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="hb(v2-p1)",color=black,style=dashed];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D142 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p2,-v1,v1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v2+p1,v1+v2+p2,-v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p2) *
  cP(gl,2*3+3,5*3+1,-v1-p2) *
  cP(hb,3*3+3,6*3+3,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+1,v2-p1) *
  cP(gl,5*3+3,6*3+2,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D142 :

// GraphViz representation

graph "142" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 142, originally 450 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="hb(v1+p1+p2)",color=black,style=dashed];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D143 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p2,v1+p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1-p2,v1+p1+p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,-v2,v2-p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,v1+p2,v2,-v1-v2-p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,-v1-p1-p2,-v2+p1,v1+v2+p2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1+p2) *
  cP(gl,2*3+2,5*3+1,-v1-p2) *
  cP(gl,3*3+3,6*3+1,v1+p1+p2) *
  cP(gl,4*3+2,5*3+2,-v2) *
  cP(gl,4*3+3,6*3+2,v2-p1) *
  cP(gl,5*3+3,6*3+3,-v1-v2-p2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,1*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D143 :

// GraphViz representation

graph "143" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 143, originally 453 (factor = +1)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1+p2)",color=red,style=solid];
  2--5 [label="gl(-v1-p2)",color=red,style=solid];
  3--6 [label="gl(v1+p1+p2)",color=red,style=solid];
  4--5 [label="gl(-v2)",color=red,style=solid];
  4--6 [label="gl(v2-p1)",color=red,style=solid];
  5--6 [label="gl(-v1-v2-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D144 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,-v1-p2+p2,v1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p1,v1+v2-p1+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p2,-v1-v2+p1-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,5*3+1,v1-p1+p1) *
  cP(gl,4*3+2,6*3+1,-v1-p2+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D144 :

// GraphViz representation

graph "144" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 144, originally 457 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--5 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D145 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1+p2,-v1-p2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p1,v1+v2-p1+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p2,-v1-v2+p1-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(gl,3*3+2,5*3+1,v1-p1+p1) *
  cP(gl,4*3+3,6*3+1,-v1-p2+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D145 :

// GraphViz representation

graph "145" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 145, originally 458 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D146 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,-v1-p2+p1,v1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p2,v1+v2-p1+p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p1,-v1-v2+p1-p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,5*3+1,v1-p1+p2) *
  cP(gl,4*3+2,6*3+1,-v1-p2+p1) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D146 :

// GraphViz representation

graph "146" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 146, originally 463 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--5 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D147 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1+p2,-v1-p2+p1) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p2,v1+v2-p1+p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p1,-v1-v2+p1-p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(gl,3*3+2,5*3+1,v1-p1+p2) *
  cP(gl,4*3+3,6*3+1,-v1-p2+p1) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D147 :

// GraphViz representation

graph "147" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 147, originally 464 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1+p2)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p1)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D148 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D148 :

// GraphViz representation

graph "148" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 148, originally 466 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D149 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-v2+p1+p2,v2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+1,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D149 :

// GraphViz representation

graph "149" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 149, originally 467 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D150 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+v2-p1-p2,-v2,-v1+p1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(hb,3*3+3,5*3+3,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+1,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D150 :

// GraphViz representation

graph "150" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 150, originally 468 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D151 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1+p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D151 :

// GraphViz representation

graph "151" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 151, originally 471 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D152 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D152 :

// GraphViz representation

graph "152" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 152, originally 478 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D153 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-v2+p1+p2,v2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+1,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D153 :

// GraphViz representation

graph "153" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 153, originally 479 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D154 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+v2-p1-p2,-v2,-v1+p1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(hb,3*3+3,5*3+3,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+1,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D154 :

// GraphViz representation

graph "154" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 154, originally 480 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D155 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1+p1,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D155 :

// GraphViz representation

graph "155" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 155, originally 483 (factor = +1/2)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D156 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D156 :

// GraphViz representation

graph "156" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 156, originally 490 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D157 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-v2+p1+p2,v2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+1,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D157 :

// GraphViz representation

graph "157" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 157, originally 491 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D158 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,v1,-v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+v2-p1-p2,-v2,-v1+p1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p1) *
  cP(hb,3*3+3,5*3+3,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+1,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D158 :

// GraphViz representation

graph "158" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 158, originally 492 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D159 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,v1-p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1+p1,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1-p1,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p2) *
  cP(gl,2*3+2,4*3+2,-v1+p1) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D159 :

// GraphViz representation

graph "159" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 159, originally 495 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p1)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D160 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(hb,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D160 :

// GraphViz representation

graph "160" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 160, originally 502 (factor = +1)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="hb(-v2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D161 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,hb,6*3+1,6*3+2,6*3+3,-v1-v2+p1+p2,v2,v1-p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(hb,4*3+3,6*3+3,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+1,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+2,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D161 :

// GraphViz representation

graph "161" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 161, originally 503 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="hb(-v1+p1+p2)",color=black,style=dashed];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D162 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p2,-v1,v1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,hb,5*3+1,5*3+2,5*3+3,v1+v2-p1-p2,-v2,-v1+p1+p2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p2) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(hb,3*3+3,5*3+3,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+1,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+2,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D162 :

// GraphViz representation

graph "162" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 162, originally 504 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="hb(v1-p1-p2)",color=black,style=dashed];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D163 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p2,v1-p2,-v1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1+p2,v1-p1-p2) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1-p2,-v1+p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1+p2,v1+v2-p1-p2,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1-p1-p2,-v1-v2+p1+p2,v2) *

* propagators:
  cP(hb,1*3+3,2*3+3,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p2) *
  cP(gl,2*3+2,4*3+2,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1-p2) *
  cP(gl,4*3+3,6*3+1,-v1+p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1-p2) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,1*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D163 :

// GraphViz representation

graph "163" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 163, originally 507 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="hb(-v1)",color=black,style=dashed];
  1--3 [label="gl(v1-p2)",color=red,style=solid];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1-p2)",color=red,style=solid];
  4--6 [label="gl(-v1+p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1-p2)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D164 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p1,-v1-p1,v1-p1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p2,-v1-p2+p2,v1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p1,v1+v2-p1+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p2,-v1-v2+p1-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(hb,2*3+3,4*3+3,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p1+p1) *
  cP(gl,4*3+2,6*3+1,-v1-p2+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D164 :

// GraphViz representation

graph "164" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 164, originally 517 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--4 [label="hb(-v1+p2)",color=black,style=dashed];
  3--5 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D165 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1,v1-p1+p1,-v1-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p2,v1-p2,-v1-p2+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p1-p1,v1+v2-p1+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p2-p2,-v1-v2+p1-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1+p1) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+2,5*3+1,v1-p1+p1) *
  cP(gl,4*3+3,6*3+1,-v1-p2+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p1+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,3*3+1,p1) *
  cI(gl,2,4*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D165 :

// GraphViz representation

graph "165" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 165, originally 518 (factor = +1/2)";
  in1--3 [label="I gl(p1)",color=red,style=solid];
  in2--4 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1+p1)",color=black,style=dashed];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p1+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p2+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p1+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D166 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,-v1-p1,v1-p2+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1,-v1-p1+p2,v1-p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2-p1,v1+v2-p2+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1-p2,-v1-v2+p2-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1+p1) *
  cP(hb,2*3+3,4*3+3,-v1+p2) *
  cP(gl,3*3+3,5*3+1,v1-p2+p1) *
  cP(gl,4*3+2,6*3+1,-v1-p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p2+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D166 :

// GraphViz representation

graph "166" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 166, originally 523 (factor = +1/2)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1+p1)",color=red,style=solid];
  2--4 [label="hb(-v1+p2)",color=black,style=dashed];
  3--5 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D167 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1-p2+p1,-v1-p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,p1,v1-p2,-v1-p1+p2) *
  cV(3,gl,gl,gl,5*3+1,5*3+2,5*3+3,-v1+p2-p1,v1+v2-p2+p1,-v2) *
  cV(3,gl,gl,gl,6*3+1,6*3+2,6*3+3,v1+p1-p2,-v1-v2+p2-p1,v2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1+p1) *
  cP(gl,2*3+3,4*3+2,-v1+p2) *
  cP(gl,3*3+2,5*3+1,v1-p2+p1) *
  cP(gl,4*3+3,6*3+1,-v1-p1+p2) *
  cP(gl,5*3+2,6*3+2,v1+v2-p2+p1) *
  cP(gl,5*3+3,6*3+3,-v2) *

* legs:
  cI(gl,1,4*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,2*3+1,4,p2) *

* symmetry factor:
  (+1/2);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "2"
  #define NLEGS "4"
  #define NVERT "6"
  #define NPROP "7"

*--#] D167 :

// GraphViz representation

graph "167" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 167, originally 524 (factor = +1/2)";
  in1--4 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1+p1)",color=black,style=dashed];
  2--4 [label="gl(-v1+p2)",color=red,style=solid];
  3--5 [label="gl(v1-p2+p1)",color=red,style=solid];
  4--6 [label="gl(-v1-p1+p2)",color=red,style=solid];
  5--6 [label="gl(v1+v2-p2+p1)",color=red,style=solid];
  5--6 [label="gl(-v2)",color=red,style=solid];
};


/************************************************/

*--#[ EPILOGUE :

* number of diagrams
  #define NDIAS "167"

*--#] EPILOGUE :

NDIAS=167

