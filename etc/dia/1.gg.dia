//
// gen-1.7:
//   filtered QGRAF output by
//   underlying cuts,
//   color structures
//

// Tue Nov  4 13:47:57 2014

//
// qgraf-3.1.4:
//   output style by Alexey Pak,
//   modified by Jens Hoff
//

*--#[ PROLOGUE :

* qgraf.dat parameters:

*   output        = '1.gg.raw';
*   style         = '/users/ttp/jens/dev/bin/gen-new/qgraf.sty';
*   model         = 'qgraf.mod';
*   in            = gl[p1],gl[p2];
*   out           = gl[p1],gl[p2];
*   loops         = 1;
*   loop_momentum = v;
*   options       = onshell,nosnail,notadpole;
*   true = iprop[hb,1,1];

*--#] PROLOGUE :


/************************************************/

// FORM representation

*--#[ D1 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,v1-p1-p2,-v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+2,4*3+2,v1-p1-p2) *
  cP(hb,3*3+3,4*3+3,-v1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D1 :

// GraphViz representation

graph "1" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 1, originally 1 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--4 [label="hb(-v1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D2 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p1+p2,v1-p1-p2,-v1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1+p2,-p1-p2,v1) *

* propagators:
  cP(gl,1*3+3,3*3+1,-p1-p2) *
  cP(si,2*3+3,4*3+2,p1+p2) *
  cP(gl,3*3+2,4*3+1,v1-p1-p2) *
  cP(hb,3*3+3,4*3+3,-v1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D2 :

// GraphViz representation

graph "2" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 2, originally 5 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="gl(-p1-p2)",color=red,style=solid];
  2--4 [label="si(p1+p2)",color=grey,style=dotted];
  3--4 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--4 [label="hb(-v1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D3 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,v1-p1-p2,p1+p2,-v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1+p2,v1) *

* propagators:
  cP(si,1*3+3,3*3+2,-p1-p2) *
  cP(gl,2*3+3,4*3+1,p1+p2) *
  cP(gl,3*3+1,4*3+2,v1-p1-p2) *
  cP(hb,3*3+3,4*3+3,-v1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D3 :

// GraphViz representation

graph "3" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 3, originally 10 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="si(-p1-p2)",color=grey,style=dotted];
  2--4 [label="gl(p1+p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--4 [label="hb(-v1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D4 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,v1-p1-p2,p1+p2,-v1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1+p2,-p1-p2,v1) *

* propagators:
  cP(si,1*3+3,3*3+2,-p1-p2) *
  cP(si,2*3+3,4*3+2,p1+p2) *
  cP(gl,3*3+1,4*3+1,v1-p1-p2) *
  cP(hb,3*3+3,4*3+3,-v1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,2*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D4 :

// GraphViz representation

graph "4" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 4, originally 13 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  2--out2 [label="O gl(p2)",color=red,style=solid];
  1--3 [label="si(-p1-p2)",color=grey,style=dotted];
  2--4 [label="si(p1+p2)",color=grey,style=dotted];
  3--4 [label="gl(v1-p1-p2)",color=red,style=solid];
  3--4 [label="hb(-v1)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D5 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1,v1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1+p1) *
  cP(hb,3*3+3,4*3+3,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D5 :

// GraphViz representation

graph "5" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 5, originally 43 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="hb(-v1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D6 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1-p2,-v1-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p1) *
  cP(gl,3*3+3,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D6 :

// GraphViz representation

graph "6" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 6, originally 44 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1+p1)",color=black,style=dashed];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D7 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,-v1-p1,v1-p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(si,2*3+3,3*3+2,-v1) *
  cP(gl,2*3+2,4*3+2,v1+p1) *
  cP(hb,3*3+3,4*3+3,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D7 :

// GraphViz representation

graph "7" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 7, originally 50 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="hb(-v1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D8 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,p1+p2,v1-p2,-v1-p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,-p1-p2) *
  cP(si,2*3+2,3*3+3,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p1) *
  cP(gl,3*3+2,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D8 :

// GraphViz representation

graph "8" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 8, originally 51 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(-p1-p2)",color=red,style=solid];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="hb(v1+p1)",color=black,style=dashed];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D9 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-v1-p1,v1-p2,p1+p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1+p1) *
  cP(gl,3*3+3,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D9 :

// GraphViz representation

graph "9" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 9, originally 52 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(-p1-p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D10 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1-p1,v1-p2,p1+p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1+p1) *
  cP(si,3*3+3,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D10 :

// GraphViz representation

graph "10" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 10, originally 53 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(-p1-p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="si(-v1+p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D11 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1-p2,-v1-p1,p1+p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(si,2*3+3,4*3+2,v1+p1) *
  cP(gl,3*3+3,4*3+1,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D11 :

// GraphViz representation

graph "11" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 11, originally 54 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(-p1-p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="si(v1+p1)",color=grey,style=dotted];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D12 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,si,si,hb,4*3+1,4*3+2,4*3+3,-v1-p1,v1-p2,p1+p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(si,2*3+3,4*3+1,v1+p1) *
  cP(si,3*3+3,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D12 :

// GraphViz representation

graph "12" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 12, originally 55 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(-p1-p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="si(v1+p1)",color=grey,style=dotted];
  3--4 [label="si(-v1+p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D13 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-v1-p1,v1-p2,p1+p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,-p1-p2) *
  cP(si,2*3+3,3*3+3,-v1) *
  cP(gl,2*3+2,4*3+1,v1+p1) *
  cP(gl,3*3+2,4*3+2,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D13 :

// GraphViz representation

graph "13" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 13, originally 56 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(-p1-p2)",color=black,style=dashed];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D14 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1-p1,p1+p2,v1-p2) *

* propagators:
  cP(si,1*3+3,4*3+2,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1+p1) *
  cP(hb,3*3+3,4*3+3,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D14 :

// GraphViz representation

graph "14" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 14, originally 57 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(-p1-p2)",color=grey,style=dotted];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="hb(-v1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D15 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1-p2,p1+p2,-v1-p1) *

* propagators:
  cP(si,1*3+3,4*3+2,-p1-p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p1) *
  cP(gl,3*3+3,4*3+1,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D15 :

// GraphViz representation

graph "15" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 15, originally 58 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(-p1-p2)",color=grey,style=dotted];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1+p1)",color=black,style=dashed];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D16 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,-p1,v1+p1,-v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p2,v1,-v1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1-p1,p1+p2,v1-p2) *

* propagators:
  cP(si,1*3+3,4*3+2,-p1-p2) *
  cP(si,2*3+3,3*3+2,-v1) *
  cP(gl,2*3+2,4*3+1,v1+p1) *
  cP(hb,3*3+3,4*3+3,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D16 :

// GraphViz representation

graph "16" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 16, originally 62 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(-p1-p2)",color=grey,style=dotted];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1+p1)",color=red,style=solid];
  3--4 [label="hb(-v1+p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D17 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,p2,-p1-p2) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,-p1,-v1,v1+p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,-v1+p2,v1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1-p2,p1+p2,-v1-p1) *

* propagators:
  cP(si,1*3+3,4*3+2,-p1-p2) *
  cP(si,2*3+2,3*3+3,-v1) *
  cP(hb,2*3+3,4*3+3,v1+p1) *
  cP(gl,3*3+2,4*3+1,-v1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,1*3+2,p2) *
  cO(gl,2*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D17 :

// GraphViz representation

graph "17" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 17, originally 63 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--1 [label="I gl(p2)",color=red,style=solid];
  2--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(-p1-p2)",color=grey,style=dotted];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="hb(v1+p1)",color=black,style=dashed];
  3--4 [label="gl(-v1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D18 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1,v1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+2,v1-p1) *
  cP(hb,3*3+3,4*3+3,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D18 :

// GraphViz representation

graph "18" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 18, originally 148 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="hb(-v1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D19 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1+p2,-v1+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p1) *
  cP(gl,3*3+3,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D19 :

// GraphViz representation

graph "19" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 19, originally 149 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1-p1)",color=black,style=dashed];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D20 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,-v1+p1,v1+p2) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(si,2*3+3,3*3+2,-v1) *
  cP(gl,2*3+2,4*3+2,v1-p1) *
  cP(hb,3*3+3,4*3+3,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D20 :

// GraphViz representation

graph "20" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 20, originally 155 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="hb(-v1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D21 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1-p2,v1+p2,-v1+p1) *

* propagators:
  cP(gl,1*3+3,4*3+1,p1+p2) *
  cP(si,2*3+2,3*3+3,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p1) *
  cP(gl,3*3+2,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D21 :

// GraphViz representation

graph "21" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 21, originally 156 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="gl(p1+p2)",color=red,style=solid];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="hb(v1-p1)",color=black,style=dashed];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D22 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-v1+p1,v1+p2,-p1-p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1-p1) *
  cP(gl,3*3+3,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D22 :

// GraphViz representation

graph "22" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 22, originally 157 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(p1+p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D23 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1,v1+p2,-p1-p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1-p1) *
  cP(si,3*3+3,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D23 :

// GraphViz representation

graph "23" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 23, originally 158 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(p1+p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="si(-v1-p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D24 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1+p2,-v1+p1,-p1-p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(si,2*3+3,4*3+2,v1-p1) *
  cP(gl,3*3+3,4*3+1,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D24 :

// GraphViz representation

graph "24" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 24, originally 159 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(p1+p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="si(v1-p1)",color=grey,style=dotted];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D25 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,si,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1,v1+p2,-p1-p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(si,2*3+3,4*3+1,v1-p1) *
  cP(si,3*3+3,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D25 :

// GraphViz representation

graph "25" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 25, originally 160 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(p1+p2)",color=black,style=dashed];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="si(v1-p1)",color=grey,style=dotted];
  3--4 [label="si(-v1-p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D26 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p1,v1-p1,-v1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-v1+p1,v1+p2,-p1-p2) *

* propagators:
  cP(hb,1*3+3,4*3+3,p1+p2) *
  cP(si,2*3+3,3*3+3,-v1) *
  cP(gl,2*3+2,4*3+1,v1-p1) *
  cP(gl,3*3+2,4*3+2,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D26 :

// GraphViz representation

graph "26" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 26, originally 161 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="hb(p1+p2)",color=black,style=dashed];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D27 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1,-p1-p2,v1+p2) *

* propagators:
  cP(si,1*3+3,4*3+2,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(gl,2*3+3,4*3+1,v1-p1) *
  cP(hb,3*3+3,4*3+3,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D27 :

// GraphViz representation

graph "27" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 27, originally 162 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(p1+p2)",color=grey,style=dotted];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="hb(-v1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D28 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1+p2,-p1-p2,-v1+p1) *

* propagators:
  cP(si,1*3+3,4*3+2,p1+p2) *
  cP(gl,2*3+2,3*3+2,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p1) *
  cP(gl,3*3+3,4*3+1,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D28 :

// GraphViz representation

graph "28" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 28, originally 163 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(p1+p2)",color=grey,style=dotted];
  2--3 [label="gl(-v1)",color=red,style=solid];
  2--4 [label="hb(v1-p1)",color=black,style=dashed];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D29 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-v1+p1,-p1-p2,v1+p2) *

* propagators:
  cP(si,1*3+3,4*3+2,p1+p2) *
  cP(si,2*3+3,3*3+2,-v1) *
  cP(gl,2*3+2,4*3+1,v1-p1) *
  cP(hb,3*3+3,4*3+3,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D29 :

// GraphViz representation

graph "29" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 29, originally 167 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(p1+p2)",color=grey,style=dotted];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="gl(v1-p1)",color=red,style=solid];
  3--4 [label="hb(-v1-p2)",color=black,style=dashed];
};


/************************************************/

// FORM representation

*--#[ D30 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,-p1,-p2,p1+p2) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,p2,-v1-p2,v1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,v1+p2,-p1-p2,-v1+p1) *

* propagators:
  cP(si,1*3+3,4*3+2,p1+p2) *
  cP(si,2*3+2,3*3+3,-v1) *
  cP(hb,2*3+3,4*3+3,v1-p1) *
  cP(gl,3*3+2,4*3+1,-v1-p2) *

* legs:
  cI(gl,1,2*3+1,p1) *
  cI(gl,2,3*3+1,p2) *
  cO(gl,1*3+1,3,p1) *
  cO(gl,1*3+2,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D30 :

// GraphViz representation

graph "30" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 30, originally 168 (factor = +1)";
  in1--2 [label="I gl(p1)",color=red,style=solid];
  in2--3 [label="I gl(p2)",color=red,style=solid];
  1--out1 [label="O gl(p1)",color=red,style=solid];
  1--out2 [label="O gl(p2)",color=red,style=solid];
  1--4 [label="si(p1+p2)",color=grey,style=dotted];
  2--3 [label="si(-v1)",color=grey,style=dotted];
  2--4 [label="hb(v1-p1)",color=black,style=dashed];
  3--4 [label="gl(-v1-p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D31 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,-v1+p1-p1,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,4*3+2,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D31 :

// GraphViz representation

graph "31" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 31, originally 170 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(v1-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D32 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-p2,-v1+p1-p1,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(si,3*3+3,4*3+2,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D32 :

// GraphViz representation

graph "32" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 32, originally 171 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="si(v1-p1+p1)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D33 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1+p2,-v1+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+3,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D33 :

// GraphViz representation

graph "33" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 33, originally 173 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D34 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,si,4*3+1,4*3+2,4*3+3,-p2,v1+p2,-v1+p1-p1) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(si,3*3+2,4*3+3,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D34 :

// GraphViz representation

graph "34" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 34, originally 174 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="si(v1-p1+p1)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D35 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p2,-v1+p1-p1,v1+p2) *

* propagators:
  cP(si,1*3+3,2*3+2,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,4*3+2,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D35 :

// GraphViz representation

graph "35" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 35, originally 185 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(v1-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D36 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p1,-v1+p1,v1-p1+p1) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-p2,-v1+p1-p1,v1+p2) *

* propagators:
  cP(si,1*3+3,2*3+2,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(si,3*3+3,4*3+2,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D36 :

// GraphViz representation

graph "36" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 36, originally 186 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="si(v1-p1+p1)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D37 :

* vertices:
  cV(3,gl,si,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p2,v1+p2,-v1+p1-p1) *

* propagators:
  cP(si,1*3+2,2*3+3,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+3,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D37 :

// GraphViz representation

graph "37" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 37, originally 187 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1+p1)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D38 :

* vertices:
  cV(3,gl,si,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p1,v1-p1+p1,-v1+p1) *
  cV(3,gl,gl,si,4*3+1,4*3+2,4*3+3,-p2,v1+p2,-v1+p1-p1) *

* propagators:
  cP(si,1*3+2,2*3+3,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1-p2) *
  cP(si,3*3+2,4*3+3,v1-p1+p1) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,3*3+1,3,p1) *
  cO(gl,4*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D38 :

// GraphViz representation

graph "38" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 38, originally 188 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  3--out1 [label="O gl(p1)",color=red,style=solid];
  4--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="si(v1-p1+p1)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D39 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,-v1+p1-p2,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,4*3+2,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D39 :

// GraphViz representation

graph "39" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 39, originally 190 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(v1-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D40 :

* vertices:
  cV(3,gl,gl,gl,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-p1,-v1+p1-p2,v1+p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(gl,1*3+3,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(si,3*3+3,4*3+2,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D40 :

// GraphViz representation

graph "40" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 40, originally 191 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="si(v1-p1+p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D41 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1+p2,-v1+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+3,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D41 :

// GraphViz representation

graph "41" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 41, originally 193 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D42 :

* vertices:
  cV(3,gl,gl,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,gl,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,si,4*3+1,4*3+2,4*3+3,-p1,v1+p2,-v1+p1-p2) *

* propagators:
  cP(gl,1*3+2,2*3+2,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+3,4*3+2,-v1-p2) *
  cP(si,3*3+2,4*3+3,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D42 :

// GraphViz representation

graph "42" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 42, originally 194 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="gl(-v1)",color=red,style=solid];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="si(v1-p1+p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D43 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,gl,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,gl,hb,4*3+1,4*3+2,4*3+3,-p1,-v1+p1-p2,v1+p2) *

* propagators:
  cP(si,1*3+3,2*3+2,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(gl,3*3+3,4*3+2,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D43 :

// GraphViz representation

graph "43" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 43, originally 205 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="gl(v1-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D44 :

* vertices:
  cV(3,gl,gl,si,1*3+1,1*3+2,1*3+3,p1,v1-p1,-v1) *
  cV(3,gl,si,hb,2*3+1,2*3+2,2*3+3,p2,v1,-v1-p2) *
  cV(3,gl,gl,si,3*3+1,3*3+2,3*3+3,-p2,-v1+p1,v1-p1+p2) *
  cV(3,gl,si,hb,4*3+1,4*3+2,4*3+3,-p1,-v1+p1-p2,v1+p2) *

* propagators:
  cP(si,1*3+3,2*3+2,-v1) *
  cP(gl,1*3+2,3*3+2,v1-p1) *
  cP(hb,2*3+3,4*3+3,-v1-p2) *
  cP(si,3*3+3,4*3+2,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D44 :

// GraphViz representation

graph "44" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 44, originally 206 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="gl(v1-p1)",color=red,style=solid];
  2--4 [label="hb(-v1-p2)",color=black,style=dashed];
  3--4 [label="si(v1-p1+p2)",color=grey,style=dotted];
};


/************************************************/

// FORM representation

*--#[ D45 :

* vertices:
  cV(3,gl,si,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,gl,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,gl,4*3+1,4*3+2,4*3+3,-p1,v1+p2,-v1+p1-p2) *

* propagators:
  cP(si,1*3+2,2*3+3,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1-p2) *
  cP(gl,3*3+2,4*3+3,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D45 :

// GraphViz representation

graph "45" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 45, originally 207 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="gl(v1-p1+p2)",color=red,style=solid];
};


/************************************************/

// FORM representation

*--#[ D46 :

* vertices:
  cV(3,gl,si,hb,1*3+1,1*3+2,1*3+3,p1,-v1,v1-p1) *
  cV(3,gl,gl,si,2*3+1,2*3+2,2*3+3,p2,-v1-p2,v1) *
  cV(3,gl,si,hb,3*3+1,3*3+2,3*3+3,-p2,v1-p1+p2,-v1+p1) *
  cV(3,gl,gl,si,4*3+1,4*3+2,4*3+3,-p1,v1+p2,-v1+p1-p2) *

* propagators:
  cP(si,1*3+2,2*3+3,-v1) *
  cP(hb,1*3+3,3*3+3,v1-p1) *
  cP(gl,2*3+2,4*3+2,-v1-p2) *
  cP(si,3*3+2,4*3+3,v1-p1+p2) *

* legs:
  cI(gl,1,1*3+1,p1) *
  cI(gl,2,2*3+1,p2) *
  cO(gl,4*3+1,3,p1) *
  cO(gl,3*3+1,4,p2) *

* symmetry factor:
  (+1);

* numbers of loops, legs, vertices, propagators:
  #define NLOOP "1"
  #define NLEGS "4"
  #define NVERT "4"
  #define NPROP "4"

*--#] D46 :

// GraphViz representation

graph "46" {
  graph [overlap=false];
  node [shape=point];
  label="diagram 46, originally 208 (factor = +1)";
  in1--1 [label="I gl(p1)",color=red,style=solid];
  in2--2 [label="I gl(p2)",color=red,style=solid];
  4--out1 [label="O gl(p1)",color=red,style=solid];
  3--out2 [label="O gl(p2)",color=red,style=solid];
  1--2 [label="si(-v1)",color=grey,style=dotted];
  1--3 [label="hb(v1-p1)",color=black,style=dashed];
  2--4 [label="gl(-v1-p2)",color=red,style=solid];
  3--4 [label="si(v1-p1+p2)",color=grey,style=dotted];
};


/************************************************/

*--#[ EPILOGUE :

* number of diagrams
  #define NDIAS "46"

*--#] EPILOGUE :

NDIAS=46

